### YamlMime:ManagedReference
items:
- uid: Pie.GraphicsAdapter
  commentId: T:Pie.GraphicsAdapter
  id: GraphicsAdapter
  parent: Pie
  children:
  - Pie.GraphicsAdapter.#ctor(System.String)
  - Pie.GraphicsAdapter.Name
  langs:
  - csharp
  - vb
  name: GraphicsAdapter
  nameWithType: GraphicsAdapter
  fullName: Pie.GraphicsAdapter
  type: Struct
  source:
    remote:
      path: Pie/GraphicsAdapter.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: GraphicsAdapter
    path: src/Pie/Pie/GraphicsAdapter.cs
    startLine: 5
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nA physical graphics device in a machine.\n"
  example: []
  syntax:
    content: public struct GraphicsAdapter
    content.vb: Public Structure GraphicsAdapter
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.GraphicsAdapter.Name
  commentId: F:Pie.GraphicsAdapter.Name
  id: Name
  parent: Pie.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GraphicsAdapter.Name
  fullName: Pie.GraphicsAdapter.Name
  type: Field
  source:
    remote:
      path: Pie/GraphicsAdapter.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Name
    path: src/Pie/Pie/GraphicsAdapter.cs
    startLine: 10
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe name of this <xref href=\"Pie.GraphicsAdapter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: Pie.GraphicsAdapter.#ctor(System.String)
  commentId: M:Pie.GraphicsAdapter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Pie.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: GraphicsAdapter(string)
  nameWithType: GraphicsAdapter.GraphicsAdapter(string)
  fullName: Pie.GraphicsAdapter.GraphicsAdapter(string)
  type: Constructor
  source:
    remote:
      path: Pie/GraphicsAdapter.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/GraphicsAdapter.cs
    startLine: 12
  assemblies:
  - Pie
  namespace: Pie
  syntax:
    content: public GraphicsAdapter(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Pie.GraphicsAdapter.#ctor*
  nameWithType.vb: GraphicsAdapter.New(String)
  fullName.vb: Pie.GraphicsAdapter.New(String)
  name.vb: New(String)
references:
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.GraphicsAdapter
  commentId: T:Pie.GraphicsAdapter
  parent: Pie
  name: GraphicsAdapter
  nameWithType: GraphicsAdapter
  fullName: Pie.GraphicsAdapter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Pie.GraphicsAdapter.#ctor*
  commentId: Overload:Pie.GraphicsAdapter.#ctor
  name: GraphicsAdapter
  nameWithType: GraphicsAdapter.GraphicsAdapter
  fullName: Pie.GraphicsAdapter.GraphicsAdapter
  nameWithType.vb: GraphicsAdapter.New
  fullName.vb: Pie.GraphicsAdapter.New
  name.vb: New
