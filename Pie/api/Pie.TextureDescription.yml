### YamlMime:ManagedReference
items:
- uid: Pie.TextureDescription
  commentId: T:Pie.TextureDescription
  id: TextureDescription
  parent: Pie
  children:
  - Pie.TextureDescription.#ctor(Pie.TextureType,System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  - Pie.TextureDescription.#ctor(System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  - Pie.TextureDescription.#ctor(System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  - Pie.TextureDescription.#ctor(System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  - Pie.TextureDescription.ArraySize
  - Pie.TextureDescription.Depth
  - Pie.TextureDescription.Format
  - Pie.TextureDescription.Height
  - Pie.TextureDescription.MipLevels
  - Pie.TextureDescription.TextureType
  - Pie.TextureDescription.Usage
  - Pie.TextureDescription.Validity
  - Pie.TextureDescription.Width
  langs:
  - csharp
  - vb
  name: TextureDescription
  nameWithType: TextureDescription
  fullName: Pie.TextureDescription
  type: Struct
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: TextureDescription
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 5
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nUsed to describe how a new <xref href=\"Pie.Texture\" data-throw-if-not-resolved=\"false\"></xref> should be stored and sampled from.\n"
  example: []
  syntax:
    content: public struct TextureDescription
    content.vb: Public Structure TextureDescription
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.TextureDescription.TextureType
  commentId: F:Pie.TextureDescription.TextureType
  id: TextureType
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: TextureType
  nameWithType: TextureDescription.TextureType
  fullName: Pie.TextureDescription.TextureType
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: TextureType
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 10
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe type of this texture.\n"
  example: []
  syntax:
    content: public TextureType TextureType
    return:
      type: Pie.TextureType
    content.vb: Public TextureType As TextureType
- uid: Pie.TextureDescription.Width
  commentId: F:Pie.TextureDescription.Width
  id: Width
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: TextureDescription.Width
  fullName: Pie.TextureDescription.Width
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Width
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 15
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe width of this texture.\n"
  example: []
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: Pie.TextureDescription.Height
  commentId: F:Pie.TextureDescription.Height
  id: Height
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TextureDescription.Height
  fullName: Pie.TextureDescription.Height
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Height
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 20
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe height of this texture.\n"
  example: []
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: Pie.TextureDescription.Depth
  commentId: F:Pie.TextureDescription.Depth
  id: Depth
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: TextureDescription.Depth
  fullName: Pie.TextureDescription.Depth
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Depth
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 25
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe depth of this texture.\n"
  example: []
  syntax:
    content: public int Depth
    return:
      type: System.Int32
    content.vb: Public Depth As Integer
- uid: Pie.TextureDescription.Format
  commentId: F:Pie.TextureDescription.Format
  id: Format
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: TextureDescription.Format
  fullName: Pie.TextureDescription.Format
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Format
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 30
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe <xref href=\"Pie.Format\" data-throw-if-not-resolved=\"false\"></xref> of this texture.\n"
  example: []
  syntax:
    content: public Format Format
    return:
      type: Pie.Format
    content.vb: Public Format As Format
- uid: Pie.TextureDescription.MipLevels
  commentId: F:Pie.TextureDescription.MipLevels
  id: MipLevels
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: MipLevels
  nameWithType: TextureDescription.MipLevels
  fullName: Pie.TextureDescription.MipLevels
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: MipLevels
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 35
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe number of mipmaps this texture will hold.\n"
  example: []
  syntax:
    content: public int MipLevels
    return:
      type: System.Int32
    content.vb: Public MipLevels As Integer
- uid: Pie.TextureDescription.ArraySize
  commentId: F:Pie.TextureDescription.ArraySize
  id: ArraySize
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: ArraySize
  nameWithType: TextureDescription.ArraySize
  fullName: Pie.TextureDescription.ArraySize
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: ArraySize
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 40
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe size of the texture array in elements.\n"
  example: []
  syntax:
    content: public int ArraySize
    return:
      type: System.Int32
    content.vb: Public ArraySize As Integer
- uid: Pie.TextureDescription.Usage
  commentId: F:Pie.TextureDescription.Usage
  id: Usage
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: TextureDescription.Usage
  fullName: Pie.TextureDescription.Usage
  type: Field
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Usage
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 50
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe <xref href=\"Pie.TextureUsage\" data-throw-if-not-resolved=\"false\"></xref> of this texture.\n"
  example: []
  syntax:
    content: public TextureUsage Usage
    return:
      type: Pie.TextureUsage
    content.vb: Public Usage As TextureUsage
- uid: Pie.TextureDescription.#ctor(System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  commentId: M:Pie.TextureDescription.#ctor(System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  id: '#ctor(System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)'
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: TextureDescription(int, Format, int, int, TextureUsage)
  nameWithType: TextureDescription.TextureDescription(int, Format, int, int, TextureUsage)
  fullName: Pie.TextureDescription.TextureDescription(int, Pie.Format, int, int, Pie.TextureUsage)
  type: Constructor
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 60
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new 1D <xref href=\"Pie.TextureDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TextureDescription(int width, Format format, int mipLevels, int arraySize, TextureUsage usage)
    parameters:
    - id: width
      type: System.Int32
      description: The width of this texture.
    - id: format
      type: Pie.Format
      description: The <xref href="Pie.Format" data-throw-if-not-resolved="false"></xref> of this texture.
    - id: mipLevels
      type: System.Int32
      description: The number of mipmaps this texture will hold.
    - id: arraySize
      type: System.Int32
      description: The size of the texture array in elements.
    - id: usage
      type: Pie.TextureUsage
      description: The <xref href="Pie.TextureUsage" data-throw-if-not-resolved="false"></xref> of this texture.
    content.vb: Public Sub New(width As Integer, format As Format, mipLevels As Integer, arraySize As Integer, usage As TextureUsage)
  overload: Pie.TextureDescription.#ctor*
  nameWithType.vb: TextureDescription.New(Integer, Format, Integer, Integer, TextureUsage)
  fullName.vb: Pie.TextureDescription.New(Integer, Pie.Format, Integer, Integer, Pie.TextureUsage)
  name.vb: New(Integer, Format, Integer, Integer, TextureUsage)
- uid: Pie.TextureDescription.#ctor(System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  commentId: M:Pie.TextureDescription.#ctor(System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  id: '#ctor(System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)'
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: TextureDescription(int, int, Format, int, int, TextureUsage)
  nameWithType: TextureDescription.TextureDescription(int, int, Format, int, int, TextureUsage)
  fullName: Pie.TextureDescription.TextureDescription(int, int, Pie.Format, int, int, Pie.TextureUsage)
  type: Constructor
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 81
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new 2D <xref href=\"Pie.TextureDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TextureDescription(int width, int height, Format format, int mipLevels, int arraySize, TextureUsage usage)
    parameters:
    - id: width
      type: System.Int32
      description: The width of this texture.
    - id: height
      type: System.Int32
      description: The height of this texture.
    - id: format
      type: Pie.Format
      description: The <xref href="Pie.Format" data-throw-if-not-resolved="false"></xref> of this texture.
    - id: mipLevels
      type: System.Int32
      description: The number of mipmaps this texture will hold.
    - id: arraySize
      type: System.Int32
      description: The size of the texture array in elements.
    - id: usage
      type: Pie.TextureUsage
      description: The <xref href="Pie.TextureUsage" data-throw-if-not-resolved="false"></xref> of this texture.
    content.vb: Public Sub New(width As Integer, height As Integer, format As Format, mipLevels As Integer, arraySize As Integer, usage As TextureUsage)
  overload: Pie.TextureDescription.#ctor*
  nameWithType.vb: TextureDescription.New(Integer, Integer, Format, Integer, Integer, TextureUsage)
  fullName.vb: Pie.TextureDescription.New(Integer, Integer, Pie.Format, Integer, Integer, Pie.TextureUsage)
  name.vb: New(Integer, Integer, Format, Integer, Integer, TextureUsage)
- uid: Pie.TextureDescription.#ctor(System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  commentId: M:Pie.TextureDescription.#ctor(System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  id: '#ctor(System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)'
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: TextureDescription(int, int, int, Format, int, int, TextureUsage)
  nameWithType: TextureDescription.TextureDescription(int, int, int, Format, int, int, TextureUsage)
  fullName: Pie.TextureDescription.TextureDescription(int, int, int, Pie.Format, int, int, Pie.TextureUsage)
  type: Constructor
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 103
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new 3D <xref href=\"Pie.TextureDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TextureDescription(int width, int height, int depth, Format format, int mipLevels, int arraySize, TextureUsage usage)
    parameters:
    - id: width
      type: System.Int32
      description: The width of this texture.
    - id: height
      type: System.Int32
      description: The height of this texture.
    - id: depth
      type: System.Int32
      description: The depth of this texture.
    - id: format
      type: Pie.Format
      description: The <xref href="Pie.Format" data-throw-if-not-resolved="false"></xref> of this texture.
    - id: mipLevels
      type: System.Int32
      description: The number of mipmaps this texture will hold.
    - id: arraySize
      type: System.Int32
      description: The size of the texture array in elements.
    - id: usage
      type: Pie.TextureUsage
      description: The <xref href="Pie.TextureUsage" data-throw-if-not-resolved="false"></xref> of this texture.
    content.vb: Public Sub New(width As Integer, height As Integer, depth As Integer, format As Format, mipLevels As Integer, arraySize As Integer, usage As TextureUsage)
  overload: Pie.TextureDescription.#ctor*
  nameWithType.vb: TextureDescription.New(Integer, Integer, Integer, Format, Integer, Integer, TextureUsage)
  fullName.vb: Pie.TextureDescription.New(Integer, Integer, Integer, Pie.Format, Integer, Integer, Pie.TextureUsage)
  name.vb: New(Integer, Integer, Integer, Format, Integer, Integer, TextureUsage)
- uid: Pie.TextureDescription.#ctor(Pie.TextureType,System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  commentId: M:Pie.TextureDescription.#ctor(Pie.TextureType,System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)
  id: '#ctor(Pie.TextureType,System.Int32,System.Int32,System.Int32,Pie.Format,System.Int32,System.Int32,Pie.TextureUsage)'
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: TextureDescription(TextureType, int, int, int, Format, int, int, TextureUsage)
  nameWithType: TextureDescription.TextureDescription(TextureType, int, int, int, Format, int, int, TextureUsage)
  fullName: Pie.TextureDescription.TextureDescription(Pie.TextureType, int, int, int, Pie.Format, int, int, Pie.TextureUsage)
  type: Constructor
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 126
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new <xref href=\"Pie.TextureDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TextureDescription(TextureType textureType, int width, int height, int depth, Format format, int mipLevels, int arraySize, TextureUsage usage)
    parameters:
    - id: textureType
      type: Pie.TextureType
      description: The type of this texture.
    - id: width
      type: System.Int32
      description: The width of this texture.
    - id: height
      type: System.Int32
      description: The height of this texture.
    - id: depth
      type: System.Int32
      description: The depth of this texture.
    - id: format
      type: Pie.Format
      description: The <xref href="Pie.Format" data-throw-if-not-resolved="false"></xref> of this texture.
    - id: mipLevels
      type: System.Int32
      description: The number of mipmaps this texture will hold.
    - id: arraySize
      type: System.Int32
      description: The size of the texture array in elements.
    - id: usage
      type: Pie.TextureUsage
      description: The <xref href="Pie.TextureUsage" data-throw-if-not-resolved="false"></xref> of this texture.
    content.vb: Public Sub New(textureType As TextureType, width As Integer, height As Integer, depth As Integer, format As Format, mipLevels As Integer, arraySize As Integer, usage As TextureUsage)
  overload: Pie.TextureDescription.#ctor*
  nameWithType.vb: TextureDescription.New(TextureType, Integer, Integer, Integer, Format, Integer, Integer, TextureUsage)
  fullName.vb: Pie.TextureDescription.New(Pie.TextureType, Integer, Integer, Integer, Pie.Format, Integer, Integer, Pie.TextureUsage)
  name.vb: New(TextureType, Integer, Integer, Integer, Format, Integer, Integer, TextureUsage)
- uid: Pie.TextureDescription.Validity
  commentId: P:Pie.TextureDescription.Validity
  id: Validity
  parent: Pie.TextureDescription
  langs:
  - csharp
  - vb
  name: Validity
  nameWithType: TextureDescription.Validity
  fullName: Pie.TextureDescription.Validity
  type: Property
  source:
    remote:
      path: Pie/TextureDescription.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Validity
    path: src/Pie/Pie/TextureDescription.cs
    startLine: 141
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCheck if this <xref href=\"Pie.TextureDescription\" data-throw-if-not-resolved=\"false\"></xref> is valid.\n"
  example: []
  syntax:
    content: public Validity Validity { get; }
    parameters: []
    return:
      type: Pie.Validity
    content.vb: Public ReadOnly Property Validity As Validity
  overload: Pie.TextureDescription.Validity*
references:
- uid: Pie.Texture
  commentId: T:Pie.Texture
  parent: Pie
  name: Texture
  nameWithType: Texture
  fullName: Pie.Texture
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.TextureType
  commentId: T:Pie.TextureType
  parent: Pie
  name: TextureType
  nameWithType: TextureType
  fullName: Pie.TextureType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Pie.Format
  commentId: T:Pie.Format
  parent: Pie
  name: Format
  nameWithType: Format
  fullName: Pie.Format
- uid: Pie.TextureUsage
  commentId: T:Pie.TextureUsage
  parent: Pie
  name: TextureUsage
  nameWithType: TextureUsage
  fullName: Pie.TextureUsage
- uid: Pie.TextureDescription
  commentId: T:Pie.TextureDescription
  parent: Pie
  name: TextureDescription
  nameWithType: TextureDescription
  fullName: Pie.TextureDescription
- uid: Pie.TextureDescription.#ctor*
  commentId: Overload:Pie.TextureDescription.#ctor
  name: TextureDescription
  nameWithType: TextureDescription.TextureDescription
  fullName: Pie.TextureDescription.TextureDescription
  nameWithType.vb: TextureDescription.New
  fullName.vb: Pie.TextureDescription.New
  name.vb: New
- uid: Pie.TextureDescription.Validity*
  commentId: Overload:Pie.TextureDescription.Validity
  name: Validity
  nameWithType: TextureDescription.Validity
  fullName: Pie.TextureDescription.Validity
- uid: Pie.Validity
  commentId: T:Pie.Validity
  parent: Pie
  name: Validity
  nameWithType: Validity
  fullName: Pie.Validity
