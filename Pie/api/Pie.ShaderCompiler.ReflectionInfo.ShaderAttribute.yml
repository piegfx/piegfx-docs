### YamlMime:ManagedReference
items:
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  commentId: T:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  id: ReflectionInfo.ShaderAttribute
  parent: Pie.ShaderCompiler
  children:
  - Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor(System.String,System.String,System.Int32)
  - Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Location
  - Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Name
  - Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Type
  langs:
  - csharp
  - vb
  name: ReflectionInfo.ShaderAttribute
  nameWithType: ReflectionInfo.ShaderAttribute
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  type: Struct
  source:
    remote:
      path: Pie.ShaderCompiler/ReflectionInfo.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: ShaderAttribute
    path: src/Pie/Pie.ShaderCompiler/ReflectionInfo.cs
    startLine: 91
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  syntax:
    content: public struct ReflectionInfo.ShaderAttribute
    content.vb: Public Structure ReflectionInfo.ShaderAttribute
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Type
  commentId: F:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Type
  id: Type
  parent: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ReflectionInfo.ShaderAttribute.Type
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Type
  type: Field
  source:
    remote:
      path: Pie.ShaderCompiler/ReflectionInfo.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Type
    path: src/Pie/Pie.ShaderCompiler/ReflectionInfo.cs
    startLine: 93
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  syntax:
    content: >-
      [JsonPropertyName("type")]

      public string Type
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      Public Type As String
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Name
  commentId: F:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Name
  id: Name
  parent: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ReflectionInfo.ShaderAttribute.Name
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Name
  type: Field
  source:
    remote:
      path: Pie.ShaderCompiler/ReflectionInfo.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Name
    path: src/Pie/Pie.ShaderCompiler/ReflectionInfo.cs
    startLine: 95
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  syntax:
    content: >-
      [JsonPropertyName("name")]

      public string Name
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      Public Name As String
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Location
  commentId: F:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Location
  id: Location
  parent: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ReflectionInfo.ShaderAttribute.Location
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.Location
  type: Field
  source:
    remote:
      path: Pie.ShaderCompiler/ReflectionInfo.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Location
    path: src/Pie/Pie.ShaderCompiler/ReflectionInfo.cs
    startLine: 97
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  syntax:
    content: >-
      [JsonPropertyName("location")]

      public int Location
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("location")>

      Public Location As Integer
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor(System.String,System.String,System.Int32)
  commentId: M:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute
  langs:
  - csharp
  - vb
  name: ShaderAttribute(string, string, int)
  nameWithType: ReflectionInfo.ShaderAttribute.ShaderAttribute(string, string, int)
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.ShaderAttribute(string, string, int)
  type: Constructor
  source:
    remote:
      path: Pie.ShaderCompiler/ReflectionInfo.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.ShaderCompiler/ReflectionInfo.cs
    startLine: 99
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  syntax:
    content: public ShaderAttribute(string type, string name, int location)
    parameters:
    - id: type
      type: System.String
    - id: name
      type: System.String
    - id: location
      type: System.Int32
    content.vb: Public Sub New(type As String, name As String, location As Integer)
  overload: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor*
  nameWithType.vb: ReflectionInfo.ShaderAttribute.New(String, String, Integer)
  fullName.vb: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.New(String, String, Integer)
  name.vb: New(String, String, Integer)
references:
- uid: Pie.ShaderCompiler
  commentId: N:Pie.ShaderCompiler
  name: Pie.ShaderCompiler
  nameWithType: Pie.ShaderCompiler
  fullName: Pie.ShaderCompiler
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.ShaderCompiler
    name: ShaderCompiler
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.ShaderCompiler
    name: ShaderCompiler
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor*
  commentId: Overload:Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.#ctor
  name: ShaderAttribute
  nameWithType: ReflectionInfo.ShaderAttribute.ShaderAttribute
  fullName: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.ShaderAttribute
  nameWithType.vb: ReflectionInfo.ShaderAttribute.New
  fullName.vb: Pie.ShaderCompiler.ReflectionInfo.ShaderAttribute.New
  name.vb: New
