### YamlMime:ManagedReference
items:
- uid: Pie.Audio.ChannelProperties
  commentId: T:Pie.Audio.ChannelProperties
  id: ChannelProperties
  parent: Pie.Audio
  children:
  - Pie.Audio.ChannelProperties.#ctor
  - Pie.Audio.ChannelProperties.#ctor(System.Double,System.Double,System.Double,System.Boolean,Pie.Audio.InterpolationType,System.Int32,System.Int32)
  - Pie.Audio.ChannelProperties.Interpolation
  - Pie.Audio.ChannelProperties.LoopEnd
  - Pie.Audio.ChannelProperties.Looping
  - Pie.Audio.ChannelProperties.LoopStart
  - Pie.Audio.ChannelProperties.Panning
  - Pie.Audio.ChannelProperties.Speed
  - Pie.Audio.ChannelProperties.Volume
  langs:
  - csharp
  - vb
  name: ChannelProperties
  nameWithType: ChannelProperties
  fullName: Pie.Audio.ChannelProperties
  type: Struct
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: ChannelProperties
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 7
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\n<xref href=\"Pie.Audio.ChannelProperties\" data-throw-if-not-resolved=\"false\"></xref> describe how a buffer should be processed when it is playing.\n"
  example: []
  syntax:
    content: public struct ChannelProperties
    content.vb: Public Structure ChannelProperties
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.Audio.ChannelProperties.Volume
  commentId: F:Pie.Audio.ChannelProperties.Volume
  id: Volume
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: ChannelProperties.Volume
  fullName: Pie.Audio.ChannelProperties.Volume
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Volume
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 14
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe volume to play at. To prevent clipping and distortion, a range of 0-1 is recommended, however values outside\nof this range (>1) are allowed.\n"
  example: []
  syntax:
    content: public double Volume
    return:
      type: System.Double
    content.vb: Public Volume As Double
- uid: Pie.Audio.ChannelProperties.Speed
  commentId: F:Pie.Audio.ChannelProperties.Speed
  id: Speed
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: ChannelProperties.Speed
  fullName: Pie.Audio.ChannelProperties.Speed
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Speed
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 20
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe speed to play at. This will also adjust the pitch. For best results, a range of 0.5-2.0 is recommended,\nhowever values outside of this range are allowed.\n"
  example: []
  syntax:
    content: public double Speed
    return:
      type: System.Double
    content.vb: Public Speed As Double
- uid: Pie.Audio.ChannelProperties.Panning
  commentId: F:Pie.Audio.ChannelProperties.Panning
  id: Panning
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: Panning
  nameWithType: ChannelProperties.Panning
  fullName: Pie.Audio.ChannelProperties.Panning
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Panning
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 26
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe LR panning/balance. A value of 0.5 will result in the sound coming equally from both speakers. Max allowable\nrange: 0-1.\n"
  example: []
  syntax:
    content: public double Panning
    return:
      type: System.Double
    content.vb: Public Panning As Double
- uid: Pie.Audio.ChannelProperties.Looping
  commentId: F:Pie.Audio.ChannelProperties.Looping
  id: Looping
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: Looping
  nameWithType: ChannelProperties.Looping
  fullName: Pie.Audio.ChannelProperties.Looping
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Looping
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 31
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nIf enabled, the current buffer will loop.\n"
  example: []
  syntax:
    content: public bool Looping
    return:
      type: System.Boolean
    content.vb: Public Looping As Boolean
- uid: Pie.Audio.ChannelProperties.Interpolation
  commentId: F:Pie.Audio.ChannelProperties.Interpolation
  id: Interpolation
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: Interpolation
  nameWithType: ChannelProperties.Interpolation
  fullName: Pie.Audio.ChannelProperties.Interpolation
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Interpolation
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 36
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe <xref href=\"Pie.Audio.InterpolationType\" data-throw-if-not-resolved=\"false\"></xref> to use during playback.\n"
  example: []
  syntax:
    content: public InterpolationType Interpolation
    return:
      type: Pie.Audio.InterpolationType
    content.vb: Public Interpolation As InterpolationType
- uid: Pie.Audio.ChannelProperties.LoopStart
  commentId: F:Pie.Audio.ChannelProperties.LoopStart
  id: LoopStart
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: LoopStart
  nameWithType: ChannelProperties.LoopStart
  fullName: Pie.Audio.ChannelProperties.LoopStart
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: LoopStart
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 41
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe starting loop point, in samples.\n"
  example: []
  syntax:
    content: public int LoopStart
    return:
      type: System.Int32
    content.vb: Public LoopStart As Integer
- uid: Pie.Audio.ChannelProperties.LoopEnd
  commentId: F:Pie.Audio.ChannelProperties.LoopEnd
  id: LoopEnd
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: LoopEnd
  nameWithType: ChannelProperties.LoopEnd
  fullName: Pie.Audio.ChannelProperties.LoopEnd
  type: Field
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: LoopEnd
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 46
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe ending loop point, in samples. To set the loop point to the end of the buffer, use a value of -1.\n"
  example: []
  syntax:
    content: public int LoopEnd
    return:
      type: System.Int32
    content.vb: Public LoopEnd As Integer
- uid: Pie.Audio.ChannelProperties.#ctor
  commentId: M:Pie.Audio.ChannelProperties.#ctor
  id: '#ctor'
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: ChannelProperties()
  nameWithType: ChannelProperties.ChannelProperties()
  fullName: Pie.Audio.ChannelProperties.ChannelProperties()
  type: Constructor
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 51
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nCreate a new <xref href=\"Pie.Audio.ChannelProperties\" data-throw-if-not-resolved=\"false\"></xref> with the default values.\n"
  example: []
  syntax:
    content: public ChannelProperties()
    content.vb: Public Sub New()
  overload: Pie.Audio.ChannelProperties.#ctor*
  nameWithType.vb: ChannelProperties.New()
  fullName.vb: Pie.Audio.ChannelProperties.New()
  name.vb: New()
- uid: Pie.Audio.ChannelProperties.#ctor(System.Double,System.Double,System.Double,System.Boolean,Pie.Audio.InterpolationType,System.Int32,System.Int32)
  commentId: M:Pie.Audio.ChannelProperties.#ctor(System.Double,System.Double,System.Double,System.Boolean,Pie.Audio.InterpolationType,System.Int32,System.Int32)
  id: '#ctor(System.Double,System.Double,System.Double,System.Boolean,Pie.Audio.InterpolationType,System.Int32,System.Int32)'
  parent: Pie.Audio.ChannelProperties
  langs:
  - csharp
  - vb
  name: ChannelProperties(double, double, double, bool, InterpolationType, int, int)
  nameWithType: ChannelProperties.ChannelProperties(double, double, double, bool, InterpolationType, int, int)
  fullName: Pie.Audio.ChannelProperties.ChannelProperties(double, double, double, bool, Pie.Audio.InterpolationType, int, int)
  type: Constructor
  source:
    remote:
      path: Pie.Audio/ChannelProperties.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.Audio/ChannelProperties.cs
    startLine: 76
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nCreate a new <xref href=\"Pie.Audio.ChannelProperties\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ChannelProperties(double volume = 1, double speed = 1, double panning = 0.5, bool looping = false, InterpolationType interpolation = InterpolationType.Linear, int loopStart = 0, int loopEnd = -1)
    parameters:
    - id: volume
      type: System.Double
      description: >-
        The volume to play at. To prevent clipping and distortion, a range of 0-1 is recommended,

        however values outside of this range (>1) are allowed.
    - id: speed
      type: System.Double
      description: >-
        The speed to play at. This will also adjust the pitch. For best results, a range of 0.5-2.0

        is recommended, however values outside of this range are allowed.
    - id: panning
      type: System.Double
      description: >-
        /// The LR panning/balance. A value of 0.5 will result in the sound coming equally

        from both speakers. Max allowable range: 0-1.
    - id: looping
      type: System.Boolean
      description: If enabled, the current buffer will loop.
    - id: interpolation
      type: Pie.Audio.InterpolationType
      description: The <xref href="Pie.Audio.InterpolationType" data-throw-if-not-resolved="false"></xref> to use during playback.
    - id: loopStart
      type: System.Int32
      description: The starting loop point, in samples.
    - id: loopEnd
      type: System.Int32
      description: >-
        The ending loop point, in samples. To set the loop point to the end of the buffer, use a

        value of -1.
    content.vb: Public Sub New(volume As Double = 1, speed As Double = 1, panning As Double = 0.5, looping As Boolean = False, interpolation As InterpolationType = InterpolationType.Linear, loopStart As Integer = 0, loopEnd As Integer = -1)
  overload: Pie.Audio.ChannelProperties.#ctor*
  nameWithType.vb: ChannelProperties.New(Double, Double, Double, Boolean, InterpolationType, Integer, Integer)
  fullName.vb: Pie.Audio.ChannelProperties.New(Double, Double, Double, Boolean, Pie.Audio.InterpolationType, Integer, Integer)
  name.vb: New(Double, Double, Double, Boolean, InterpolationType, Integer, Integer)
references:
- uid: Pie.Audio.ChannelProperties
  commentId: T:Pie.Audio.ChannelProperties
  parent: Pie.Audio
  name: ChannelProperties
  nameWithType: ChannelProperties
  fullName: Pie.Audio.ChannelProperties
- uid: Pie.Audio
  commentId: N:Pie.Audio
  name: Pie.Audio
  nameWithType: Pie.Audio
  fullName: Pie.Audio
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.Audio.InterpolationType
  commentId: T:Pie.Audio.InterpolationType
  parent: Pie.Audio
  name: InterpolationType
  nameWithType: InterpolationType
  fullName: Pie.Audio.InterpolationType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Pie.Audio.ChannelProperties.#ctor*
  commentId: Overload:Pie.Audio.ChannelProperties.#ctor
  name: ChannelProperties
  nameWithType: ChannelProperties.ChannelProperties
  fullName: Pie.Audio.ChannelProperties.ChannelProperties
  nameWithType.vb: ChannelProperties.New
  fullName.vb: Pie.Audio.ChannelProperties.New
  name.vb: New
