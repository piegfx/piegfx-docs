### YamlMime:ManagedReference
items:
- uid: Pie.Validity
  commentId: T:Pie.Validity
  id: Validity
  parent: Pie
  children:
  - Pie.Validity.#ctor(System.Boolean,System.String)
  - Pie.Validity.IsValid
  - Pie.Validity.Message
  langs:
  - csharp
  - vb
  name: Validity
  nameWithType: Validity
  fullName: Pie.Validity
  type: Struct
  source:
    remote:
      path: Pie/Validity.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Validity
    path: src/Pie/Pie/Validity.cs
    startLine: 5
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nRepresents the result of a validity check.\n"
  example: []
  syntax:
    content: public struct Validity
    content.vb: Public Structure Validity
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.Validity.IsValid
  commentId: F:Pie.Validity.IsValid
  id: IsValid
  parent: Pie.Validity
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Validity.IsValid
  fullName: Pie.Validity.IsValid
  type: Field
  source:
    remote:
      path: Pie/Validity.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: IsValid
    path: src/Pie/Pie/Validity.cs
    startLine: 10
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nIs <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when the validity check passes.\n"
  example: []
  syntax:
    content: public readonly bool IsValid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsValid As Boolean
- uid: Pie.Validity.Message
  commentId: F:Pie.Validity.Message
  id: Message
  parent: Pie.Validity
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Validity.Message
  fullName: Pie.Validity.Message
  type: Field
  source:
    remote:
      path: Pie/Validity.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Message
    path: src/Pie/Pie/Validity.cs
    startLine: 15
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nAn accompanying message, if any. This is only set if <xref href=\"Pie.Validity.IsValid\" data-throw-if-not-resolved=\"false\"></xref> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n"
  example: []
  syntax:
    content: public readonly string Message
    return:
      type: System.String
    content.vb: Public ReadOnly Message As String
- uid: Pie.Validity.#ctor(System.Boolean,System.String)
  commentId: M:Pie.Validity.#ctor(System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.String)'
  parent: Pie.Validity
  langs:
  - csharp
  - vb
  name: Validity(bool, string)
  nameWithType: Validity.Validity(bool, string)
  fullName: Pie.Validity.Validity(bool, string)
  type: Constructor
  source:
    remote:
      path: Pie/Validity.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/Validity.cs
    startLine: 22
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new <xref href=\"Pie.Validity\" data-throw-if-not-resolved=\"false\"></xref> result.\n"
  example: []
  syntax:
    content: public Validity(bool isValid, string message)
    parameters:
    - id: isValid
      type: System.Boolean
      description: Is <xref uid="langword_csharp_true" name="true" href=""></xref> when the validity check passes.
    - id: message
      type: System.String
      description: An accompanying message, if any.
    content.vb: Public Sub New(isValid As Boolean, message As String)
  overload: Pie.Validity.#ctor*
  nameWithType.vb: Validity.New(Boolean, String)
  fullName.vb: Pie.Validity.New(Boolean, String)
  name.vb: New(Boolean, String)
references:
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.Validity.IsValid
  commentId: F:Pie.Validity.IsValid
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Pie.Validity
  commentId: T:Pie.Validity
  parent: Pie
  name: Validity
  nameWithType: Validity
  fullName: Pie.Validity
- uid: Pie.Validity.#ctor*
  commentId: Overload:Pie.Validity.#ctor
  name: Validity
  nameWithType: Validity.Validity
  fullName: Pie.Validity.Validity
  nameWithType.vb: Validity.New
  fullName.vb: Pie.Validity.New
  name.vb: New
