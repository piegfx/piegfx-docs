### YamlMime:ManagedReference
items:
- uid: Pie.Windowing.InputState
  commentId: T:Pie.Windowing.InputState
  id: InputState
  parent: Pie.Windowing
  children:
  - Pie.Windowing.InputState.IsKeyDown(Pie.Windowing.Key)
  - Pie.Windowing.InputState.IsMouseButtonDown(Pie.Windowing.MouseButton)
  - Pie.Windowing.InputState.KeysDown
  - Pie.Windowing.InputState.MouseButtonsDown
  - Pie.Windowing.InputState.MousePosition
  - Pie.Windowing.InputState.TextInput
  langs:
  - csharp
  - vb
  name: InputState
  nameWithType: InputState
  fullName: Pie.Windowing.InputState
  type: Class
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: InputState
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 6
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public class InputState
    content.vb: Public Class InputState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Pie.Windowing.InputState.KeysDown
  commentId: P:Pie.Windowing.InputState.KeysDown
  id: KeysDown
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: KeysDown
  nameWithType: InputState.KeysDown
  fullName: Pie.Windowing.InputState.KeysDown
  type: Property
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: KeysDown
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 12
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public HashSet<Key> KeysDown { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Pie.Windowing.Key}
    content.vb: Public ReadOnly Property KeysDown As HashSet(Of Key)
  overload: Pie.Windowing.InputState.KeysDown*
- uid: Pie.Windowing.InputState.TextInput
  commentId: P:Pie.Windowing.InputState.TextInput
  id: TextInput
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: TextInput
  nameWithType: InputState.TextInput
  fullName: Pie.Windowing.InputState.TextInput
  type: Property
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: TextInput
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 14
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public string TextInput { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TextInput As String
  overload: Pie.Windowing.InputState.TextInput*
- uid: Pie.Windowing.InputState.IsKeyDown(Pie.Windowing.Key)
  commentId: M:Pie.Windowing.InputState.IsKeyDown(Pie.Windowing.Key)
  id: IsKeyDown(Pie.Windowing.Key)
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: IsKeyDown(Key)
  nameWithType: InputState.IsKeyDown(Key)
  fullName: Pie.Windowing.InputState.IsKeyDown(Pie.Windowing.Key)
  type: Method
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: IsKeyDown
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 16
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public bool IsKeyDown(Key key)
    parameters:
    - id: key
      type: Pie.Windowing.Key
    return:
      type: System.Boolean
    content.vb: Public Function IsKeyDown(key As Key) As Boolean
  overload: Pie.Windowing.InputState.IsKeyDown*
- uid: Pie.Windowing.InputState.MouseButtonsDown
  commentId: P:Pie.Windowing.InputState.MouseButtonsDown
  id: MouseButtonsDown
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: MouseButtonsDown
  nameWithType: InputState.MouseButtonsDown
  fullName: Pie.Windowing.InputState.MouseButtonsDown
  type: Property
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: MouseButtonsDown
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 18
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public HashSet<MouseButton> MouseButtonsDown { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Pie.Windowing.MouseButton}
    content.vb: Public ReadOnly Property MouseButtonsDown As HashSet(Of MouseButton)
  overload: Pie.Windowing.InputState.MouseButtonsDown*
- uid: Pie.Windowing.InputState.IsMouseButtonDown(Pie.Windowing.MouseButton)
  commentId: M:Pie.Windowing.InputState.IsMouseButtonDown(Pie.Windowing.MouseButton)
  id: IsMouseButtonDown(Pie.Windowing.MouseButton)
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: IsMouseButtonDown(MouseButton)
  nameWithType: InputState.IsMouseButtonDown(MouseButton)
  fullName: Pie.Windowing.InputState.IsMouseButtonDown(Pie.Windowing.MouseButton)
  type: Method
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: IsMouseButtonDown
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 20
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public bool IsMouseButtonDown(MouseButton button)
    parameters:
    - id: button
      type: Pie.Windowing.MouseButton
    return:
      type: System.Boolean
    content.vb: Public Function IsMouseButtonDown(button As MouseButton) As Boolean
  overload: Pie.Windowing.InputState.IsMouseButtonDown*
- uid: Pie.Windowing.InputState.MousePosition
  commentId: P:Pie.Windowing.InputState.MousePosition
  id: MousePosition
  parent: Pie.Windowing.InputState
  langs:
  - csharp
  - vb
  name: MousePosition
  nameWithType: InputState.MousePosition
  fullName: Pie.Windowing.InputState.MousePosition
  type: Property
  source:
    remote:
      path: Pie.Windowing/InputState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: MousePosition
    path: src/Pie/Pie.Windowing/InputState.cs
    startLine: 22
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public Vector2 MousePosition { get; }
    parameters: []
    return:
      type: System.Numerics.Vector2
    content.vb: Public Property MousePosition As Vector2
  overload: Pie.Windowing.InputState.MousePosition*
references:
- uid: Pie.Windowing
  commentId: N:Pie.Windowing
  name: Pie.Windowing
  nameWithType: Pie.Windowing
  fullName: Pie.Windowing
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Windowing
    name: Windowing
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Windowing
    name: Windowing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.Windowing.InputState.KeysDown*
  commentId: Overload:Pie.Windowing.InputState.KeysDown
  name: KeysDown
  nameWithType: InputState.KeysDown
  fullName: Pie.Windowing.InputState.KeysDown
- uid: System.Collections.Generic.HashSet{Pie.Windowing.Key}
  commentId: T:System.Collections.Generic.HashSet{Pie.Windowing.Key}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Key>
  nameWithType: HashSet<Key>
  fullName: System.Collections.Generic.HashSet<Pie.Windowing.Key>
  nameWithType.vb: HashSet(Of Key)
  fullName.vb: System.Collections.Generic.HashSet(Of Pie.Windowing.Key)
  name.vb: HashSet(Of Key)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: Pie.Windowing.Key
    name: Key
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Pie.Windowing.Key
    name: Key
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Pie.Windowing.InputState.TextInput*
  commentId: Overload:Pie.Windowing.InputState.TextInput
  name: TextInput
  nameWithType: InputState.TextInput
  fullName: Pie.Windowing.InputState.TextInput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Pie.Windowing.InputState.IsKeyDown*
  commentId: Overload:Pie.Windowing.InputState.IsKeyDown
  name: IsKeyDown
  nameWithType: InputState.IsKeyDown
  fullName: Pie.Windowing.InputState.IsKeyDown
- uid: Pie.Windowing.Key
  commentId: T:Pie.Windowing.Key
  parent: Pie.Windowing
  name: Key
  nameWithType: Key
  fullName: Pie.Windowing.Key
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.Windowing.InputState.MouseButtonsDown*
  commentId: Overload:Pie.Windowing.InputState.MouseButtonsDown
  name: MouseButtonsDown
  nameWithType: InputState.MouseButtonsDown
  fullName: Pie.Windowing.InputState.MouseButtonsDown
- uid: System.Collections.Generic.HashSet{Pie.Windowing.MouseButton}
  commentId: T:System.Collections.Generic.HashSet{Pie.Windowing.MouseButton}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<MouseButton>
  nameWithType: HashSet<MouseButton>
  fullName: System.Collections.Generic.HashSet<Pie.Windowing.MouseButton>
  nameWithType.vb: HashSet(Of MouseButton)
  fullName.vb: System.Collections.Generic.HashSet(Of Pie.Windowing.MouseButton)
  name.vb: HashSet(Of MouseButton)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: Pie.Windowing.MouseButton
    name: MouseButton
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Pie.Windowing.MouseButton
    name: MouseButton
  - name: )
- uid: Pie.Windowing.InputState.IsMouseButtonDown*
  commentId: Overload:Pie.Windowing.InputState.IsMouseButtonDown
  name: IsMouseButtonDown
  nameWithType: InputState.IsMouseButtonDown
  fullName: Pie.Windowing.InputState.IsMouseButtonDown
- uid: Pie.Windowing.MouseButton
  commentId: T:Pie.Windowing.MouseButton
  parent: Pie.Windowing
  name: MouseButton
  nameWithType: MouseButton
  fullName: Pie.Windowing.MouseButton
- uid: Pie.Windowing.InputState.MousePosition*
  commentId: Overload:Pie.Windowing.InputState.MousePosition
  name: MousePosition
  nameWithType: InputState.MousePosition
  fullName: Pie.Windowing.InputState.MousePosition
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
