### YamlMime:ManagedReference
items:
- uid: Pie.Audio.AudioFormat
  commentId: T:Pie.Audio.AudioFormat
  id: AudioFormat
  parent: Pie.Audio
  children:
  - Pie.Audio.AudioFormat.#ctor(System.Byte,System.Int32,Pie.Audio.FormatType)
  - Pie.Audio.AudioFormat.Channels
  - Pie.Audio.AudioFormat.FormatType
  - Pie.Audio.AudioFormat.SampleRate
  langs:
  - csharp
  - vb
  name: AudioFormat
  nameWithType: AudioFormat
  fullName: Pie.Audio.AudioFormat
  type: Struct
  source:
    remote:
      path: Pie.Audio/AudioFormat.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: AudioFormat
    path: src/Pie/Pie.Audio/AudioFormat.cs
    startLine: 7
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nDescribes the format of PCM audio, such as its data type, and its sample rate.\n"
  example: []
  syntax:
    content: public struct AudioFormat
    content.vb: Public Structure AudioFormat
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.Audio.AudioFormat.Channels
  commentId: F:Pie.Audio.AudioFormat.Channels
  id: Channels
  parent: Pie.Audio.AudioFormat
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: AudioFormat.Channels
  fullName: Pie.Audio.AudioFormat.Channels
  type: Field
  source:
    remote:
      path: Pie.Audio/AudioFormat.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Channels
    path: src/Pie/Pie.Audio/AudioFormat.cs
    startLine: 13
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe number of channels the audio has.\n"
  example: []
  syntax:
    content: public byte Channels
    return:
      type: System.Byte
    content.vb: Public Channels As Byte
- uid: Pie.Audio.AudioFormat.SampleRate
  commentId: F:Pie.Audio.AudioFormat.SampleRate
  id: SampleRate
  parent: Pie.Audio.AudioFormat
  langs:
  - csharp
  - vb
  name: SampleRate
  nameWithType: AudioFormat.SampleRate
  fullName: Pie.Audio.AudioFormat.SampleRate
  type: Field
  source:
    remote:
      path: Pie.Audio/AudioFormat.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: SampleRate
    path: src/Pie/Pie.Audio/AudioFormat.cs
    startLine: 18
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe sampling rate of the audio.\n"
  example: []
  syntax:
    content: public int SampleRate
    return:
      type: System.Int32
    content.vb: Public SampleRate As Integer
- uid: Pie.Audio.AudioFormat.FormatType
  commentId: F:Pie.Audio.AudioFormat.FormatType
  id: FormatType
  parent: Pie.Audio.AudioFormat
  langs:
  - csharp
  - vb
  name: FormatType
  nameWithType: AudioFormat.FormatType
  fullName: Pie.Audio.AudioFormat.FormatType
  type: Field
  source:
    remote:
      path: Pie.Audio/AudioFormat.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: FormatType
    path: src/Pie/Pie.Audio/AudioFormat.cs
    startLine: 23
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nThe <xref href=\"Pie.Audio.FormatType\" data-throw-if-not-resolved=\"false\"></xref> of the audio.\n"
  example: []
  syntax:
    content: public FormatType FormatType
    return:
      type: Pie.Audio.FormatType
    content.vb: Public FormatType As FormatType
- uid: Pie.Audio.AudioFormat.#ctor(System.Byte,System.Int32,Pie.Audio.FormatType)
  commentId: M:Pie.Audio.AudioFormat.#ctor(System.Byte,System.Int32,Pie.Audio.FormatType)
  id: '#ctor(System.Byte,System.Int32,Pie.Audio.FormatType)'
  parent: Pie.Audio.AudioFormat
  langs:
  - csharp
  - vb
  name: AudioFormat(byte, int, FormatType)
  nameWithType: AudioFormat.AudioFormat(byte, int, FormatType)
  fullName: Pie.Audio.AudioFormat.AudioFormat(byte, int, Pie.Audio.FormatType)
  type: Constructor
  source:
    remote:
      path: Pie.Audio/AudioFormat.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.Audio/AudioFormat.cs
    startLine: 31
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nCreate a new <xref href=\"Pie.Audio.AudioFormat\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AudioFormat(byte channels, int sampleRate, FormatType formatType)
    parameters:
    - id: channels
      type: System.Byte
      description: The number of channels the audio has.
    - id: sampleRate
      type: System.Int32
      description: The sampling rate of the audio.
    - id: formatType
      type: Pie.Audio.FormatType
      description: The <xref href="Pie.Audio.FormatType" data-throw-if-not-resolved="false"></xref> of the audio.
    content.vb: Public Sub New(channels As Byte, sampleRate As Integer, formatType As FormatType)
  overload: Pie.Audio.AudioFormat.#ctor*
  nameWithType.vb: AudioFormat.New(Byte, Integer, FormatType)
  fullName.vb: Pie.Audio.AudioFormat.New(Byte, Integer, Pie.Audio.FormatType)
  name.vb: New(Byte, Integer, FormatType)
references:
- uid: Pie.Audio
  commentId: N:Pie.Audio
  name: Pie.Audio
  nameWithType: Pie.Audio
  fullName: Pie.Audio
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Pie.Audio.FormatType
  commentId: T:Pie.Audio.FormatType
  parent: Pie.Audio
  name: FormatType
  nameWithType: FormatType
  fullName: Pie.Audio.FormatType
- uid: Pie.Audio.AudioFormat
  commentId: T:Pie.Audio.AudioFormat
  parent: Pie.Audio
  name: AudioFormat
  nameWithType: AudioFormat
  fullName: Pie.Audio.AudioFormat
- uid: Pie.Audio.AudioFormat.#ctor*
  commentId: Overload:Pie.Audio.AudioFormat.#ctor
  name: AudioFormat
  nameWithType: AudioFormat.AudioFormat
  fullName: Pie.Audio.AudioFormat.AudioFormat
  nameWithType.vb: AudioFormat.New
  fullName.vb: Pie.Audio.AudioFormat.New
  name.vb: New
