### YamlMime:ManagedReference
items:
- uid: Pie.Extensions.SilkWindowing.SilkPie
  commentId: T:Pie.Extensions.SilkWindowing.SilkPie
  id: SilkPie
  parent: Pie.Extensions.SilkWindowing
  children:
  - Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow,Pie.GraphicsApi,Pie.GraphicsDeviceOptions)
  - Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow)
  - Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@,Pie.GraphicsApi)
  - Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@)
  langs:
  - csharp
  - vb
  name: SilkPie
  nameWithType: SilkPie
  fullName: Pie.Extensions.SilkWindowing.SilkPie
  type: Class
  source:
    remote:
      path: Pie.Extensions.SilkWindowing/SilkPie.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: SilkPie
    path: src/Pie/Pie.Extensions.SilkWindowing/SilkPie.cs
    startLine: 7
  assemblies:
  - Pie.Extensions.SilkWindowing
  namespace: Pie.Extensions.SilkWindowing
  syntax:
    content: public static class SilkPie
    content.vb: Public Module SilkPie
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@,Pie.GraphicsApi)
  commentId: M:Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@,Pie.GraphicsApi)
  id: CreateWindow(WindowOptions@,Pie.GraphicsApi)
  parent: Pie.Extensions.SilkWindowing.SilkPie
  langs:
  - csharp
  - vb
  name: CreateWindow(ref WindowOptions, GraphicsApi)
  nameWithType: SilkPie.CreateWindow(ref WindowOptions, GraphicsApi)
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(ref WindowOptions, Pie.GraphicsApi)
  type: Method
  source:
    remote:
      path: Pie.Extensions.SilkWindowing/SilkPie.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: CreateWindow
    path: src/Pie/Pie.Extensions.SilkWindowing/SilkPie.cs
    startLine: 9
  assemblies:
  - Pie.Extensions.SilkWindowing
  namespace: Pie.Extensions.SilkWindowing
  syntax:
    content: public static IWindow CreateWindow(ref WindowOptions options, GraphicsApi api)
    parameters:
    - id: options
      type: WindowOptions
    - id: api
      type: Pie.GraphicsApi
    return:
      type: IWindow
    content.vb: Public Shared Function CreateWindow(options As WindowOptions, api As GraphicsApi) As IWindow
  overload: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow*
  nameWithType.vb: SilkPie.CreateWindow(WindowOptions, GraphicsApi)
  fullName.vb: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions, Pie.GraphicsApi)
  name.vb: CreateWindow(WindowOptions, GraphicsApi)
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@)
  commentId: M:Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions@)
  id: CreateWindow(WindowOptions@)
  parent: Pie.Extensions.SilkWindowing.SilkPie
  langs:
  - csharp
  - vb
  name: CreateWindow(ref WindowOptions)
  nameWithType: SilkPie.CreateWindow(ref WindowOptions)
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(ref WindowOptions)
  type: Method
  source:
    remote:
      path: Pie.Extensions.SilkWindowing/SilkPie.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: CreateWindow
    path: src/Pie/Pie.Extensions.SilkWindowing/SilkPie.cs
    startLine: 28
  assemblies:
  - Pie.Extensions.SilkWindowing
  namespace: Pie.Extensions.SilkWindowing
  syntax:
    content: public static IWindow CreateWindow(ref WindowOptions options)
    parameters:
    - id: options
      type: WindowOptions
    return:
      type: IWindow
    content.vb: Public Shared Function CreateWindow(options As WindowOptions) As IWindow
  overload: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow*
  nameWithType.vb: SilkPie.CreateWindow(WindowOptions)
  fullName.vb: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow(WindowOptions)
  name.vb: CreateWindow(WindowOptions)
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow,Pie.GraphicsApi,Pie.GraphicsDeviceOptions)
  commentId: M:Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow,Pie.GraphicsApi,Pie.GraphicsDeviceOptions)
  id: CreateGraphicsDevice(IWindow,Pie.GraphicsApi,Pie.GraphicsDeviceOptions)
  isExtensionMethod: true
  parent: Pie.Extensions.SilkWindowing.SilkPie
  langs:
  - csharp
  - vb
  name: CreateGraphicsDevice(IWindow, GraphicsApi, GraphicsDeviceOptions)
  nameWithType: SilkPie.CreateGraphicsDevice(IWindow, GraphicsApi, GraphicsDeviceOptions)
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow, Pie.GraphicsApi, Pie.GraphicsDeviceOptions)
  type: Method
  source:
    remote:
      path: Pie.Extensions.SilkWindowing/SilkPie.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: CreateGraphicsDevice
    path: src/Pie/Pie.Extensions.SilkWindowing/SilkPie.cs
    startLine: 40
  assemblies:
  - Pie.Extensions.SilkWindowing
  namespace: Pie.Extensions.SilkWindowing
  summary: "\nCreate a graphics device for an already existing window.\n"
  example: []
  syntax:
    content: public static GraphicsDevice CreateGraphicsDevice(this IWindow window, GraphicsApi api, GraphicsDeviceOptions options = default)
    parameters:
    - id: window
      type: IWindow
      description: The window object.
    - id: api
      type: Pie.GraphicsApi
      description: The graphics API to use.
    - id: options
      type: Pie.GraphicsDeviceOptions
    return:
      type: Pie.GraphicsDevice
      description: The created graphics device.
    content.vb: Public Shared Function CreateGraphicsDevice(window As IWindow, api As GraphicsApi, options As GraphicsDeviceOptions = Nothing) As GraphicsDevice
  overload: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice*
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow)
  commentId: M:Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow)
  id: CreateGraphicsDevice(IWindow)
  isExtensionMethod: true
  parent: Pie.Extensions.SilkWindowing.SilkPie
  langs:
  - csharp
  - vb
  name: CreateGraphicsDevice(IWindow)
  nameWithType: SilkPie.CreateGraphicsDevice(IWindow)
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice(IWindow)
  type: Method
  source:
    remote:
      path: Pie.Extensions.SilkWindowing/SilkPie.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: CreateGraphicsDevice
    path: src/Pie/Pie.Extensions.SilkWindowing/SilkPie.cs
    startLine: 59
  assemblies:
  - Pie.Extensions.SilkWindowing
  namespace: Pie.Extensions.SilkWindowing
  summary: "\nCreate a graphics device for an already existing window.\n"
  example: []
  syntax:
    content: public static GraphicsDevice CreateGraphicsDevice(this IWindow window)
    parameters:
    - id: window
      type: IWindow
      description: The window object.
    return:
      type: Pie.GraphicsDevice
      description: The created graphics device.
    content.vb: Public Shared Function CreateGraphicsDevice(window As IWindow) As GraphicsDevice
  overload: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice*
references:
- uid: Pie.Extensions.SilkWindowing
  commentId: N:Pie.Extensions.SilkWindowing
  name: Pie.Extensions.SilkWindowing
  nameWithType: Pie.Extensions.SilkWindowing
  fullName: Pie.Extensions.SilkWindowing
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Extensions
    name: Extensions
  - name: .
  - uid: Pie.Extensions.SilkWindowing
    name: SilkWindowing
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Extensions
    name: Extensions
  - name: .
  - uid: Pie.Extensions.SilkWindowing
    name: SilkWindowing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow*
  commentId: Overload:Pie.Extensions.SilkWindowing.SilkPie.CreateWindow
  name: CreateWindow
  nameWithType: SilkPie.CreateWindow
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateWindow
- uid: WindowOptions
  isExternal: true
  name: WindowOptions
  nameWithType: WindowOptions
  fullName: WindowOptions
- uid: Pie.GraphicsApi
  commentId: T:Pie.GraphicsApi
  parent: Pie
  name: GraphicsApi
  nameWithType: GraphicsApi
  fullName: Pie.GraphicsApi
- uid: IWindow
  isExternal: true
  name: IWindow
  nameWithType: IWindow
  fullName: IWindow
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice*
  commentId: Overload:Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice
  name: CreateGraphicsDevice
  nameWithType: SilkPie.CreateGraphicsDevice
  fullName: Pie.Extensions.SilkWindowing.SilkPie.CreateGraphicsDevice
- uid: Pie.GraphicsDeviceOptions
  commentId: T:Pie.GraphicsDeviceOptions
  parent: Pie
  name: GraphicsDeviceOptions
  nameWithType: GraphicsDeviceOptions
  fullName: Pie.GraphicsDeviceOptions
- uid: Pie.GraphicsDevice
  commentId: T:Pie.GraphicsDevice
  parent: Pie
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Pie.GraphicsDevice
