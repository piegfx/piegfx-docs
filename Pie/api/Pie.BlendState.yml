### YamlMime:ManagedReference
items:
- uid: Pie.BlendState
  commentId: T:Pie.BlendState
  id: BlendState
  parent: Pie
  children:
  - Pie.BlendState.Description
  - Pie.BlendState.Dispose
  - Pie.BlendState.IsDisposed
  langs:
  - csharp
  - vb
  name: BlendState
  nameWithType: BlendState
  fullName: Pie.BlendState
  type: Class
  source:
    remote:
      path: Pie/BlendState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: BlendState
    path: src/Pie/Pie/BlendState.cs
    startLine: 7
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nUsed to tell the graphics device how to blend objects with opacity.\n"
  example: []
  syntax:
    content: 'public abstract class BlendState : IDisposable'
    content.vb: Public MustInherit Class BlendState Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Pie.BlendState.IsDisposed
  commentId: P:Pie.BlendState.IsDisposed
  id: IsDisposed
  parent: Pie.BlendState
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: BlendState.IsDisposed
  fullName: Pie.BlendState.IsDisposed
  type: Property
  source:
    remote:
      path: Pie/BlendState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: IsDisposed
    path: src/Pie/Pie/BlendState.cs
    startLine: 12
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nWill return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when this <xref href=\"Pie.BlendState\" data-throw-if-not-resolved=\"false\"></xref> has been disposed.\n"
  example: []
  syntax:
    content: public abstract bool IsDisposed { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride Property IsDisposed As Boolean
  overload: Pie.BlendState.IsDisposed*
- uid: Pie.BlendState.Description
  commentId: P:Pie.BlendState.Description
  id: Description
  parent: Pie.BlendState
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: BlendState.Description
  fullName: Pie.BlendState.Description
  type: Property
  source:
    remote:
      path: Pie/BlendState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Description
    path: src/Pie/Pie/BlendState.cs
    startLine: 17
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nGet the <xref href=\"Pie.BlendStateDescription\" data-throw-if-not-resolved=\"false\"></xref> for this <xref href=\"Pie.BlendState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract BlendStateDescription Description { get; }
    parameters: []
    return:
      type: Pie.BlendStateDescription
    content.vb: Public MustOverride ReadOnly Property Description As BlendStateDescription
  overload: Pie.BlendState.Description*
- uid: Pie.BlendState.Dispose
  commentId: M:Pie.BlendState.Dispose
  id: Dispose
  parent: Pie.BlendState
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BlendState.Dispose()
  fullName: Pie.BlendState.Dispose()
  type: Method
  source:
    remote:
      path: Pie/BlendState.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Dispose
    path: src/Pie/Pie/BlendState.cs
    startLine: 22
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nDispose of this <xref href=\"Pie.BlendState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract void Dispose()
    content.vb: Public MustOverride Sub Dispose()
  overload: Pie.BlendState.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.BlendState
  commentId: T:Pie.BlendState
  parent: Pie
  name: BlendState
  nameWithType: BlendState
  fullName: Pie.BlendState
- uid: Pie.BlendState.IsDisposed*
  commentId: Overload:Pie.BlendState.IsDisposed
  name: IsDisposed
  nameWithType: BlendState.IsDisposed
  fullName: Pie.BlendState.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.BlendStateDescription
  commentId: T:Pie.BlendStateDescription
  parent: Pie
  name: BlendStateDescription
  nameWithType: BlendStateDescription
  fullName: Pie.BlendStateDescription
- uid: Pie.BlendState.Description*
  commentId: Overload:Pie.BlendState.Description
  name: Description
  nameWithType: BlendState.Description
  fullName: Pie.BlendState.Description
- uid: Pie.BlendState.Dispose*
  commentId: Overload:Pie.BlendState.Dispose
  name: Dispose
  nameWithType: BlendState.Dispose
  fullName: Pie.BlendState.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
