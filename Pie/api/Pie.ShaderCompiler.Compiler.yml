### YamlMime:ManagedReference
items:
- uid: Pie.ShaderCompiler.Compiler
  commentId: T:Pie.ShaderCompiler.Compiler
  id: Compiler
  parent: Pie.ShaderCompiler
  children:
  - Pie.ShaderCompiler.Compiler.FromSpirv(Pie.ShaderCompiler.Language,System.Byte[])
  - Pie.ShaderCompiler.Compiler.ToSpirv(Pie.ShaderCompiler.Stage,Pie.ShaderCompiler.Language,System.Byte[],System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: Compiler
  nameWithType: Compiler
  fullName: Pie.ShaderCompiler.Compiler
  type: Class
  source:
    remote:
      path: Pie.ShaderCompiler/Compiler.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Compiler
    path: src/Pie/Pie.ShaderCompiler/Compiler.cs
    startLine: 13
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  summary: "\nProvides cross-platform API-independent shader compilation functions.\n"
  example: []
  syntax:
    content: public static class Compiler
    content.vb: Public Module Compiler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Pie.ShaderCompiler.Compiler.ToSpirv(Pie.ShaderCompiler.Stage,Pie.ShaderCompiler.Language,System.Byte[],System.String,System.Boolean)
  commentId: M:Pie.ShaderCompiler.Compiler.ToSpirv(Pie.ShaderCompiler.Stage,Pie.ShaderCompiler.Language,System.Byte[],System.String,System.Boolean)
  id: ToSpirv(Pie.ShaderCompiler.Stage,Pie.ShaderCompiler.Language,System.Byte[],System.String,System.Boolean)
  parent: Pie.ShaderCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ToSpirv(Stage, Language, byte[], string, bool)
  nameWithType: Compiler.ToSpirv(Stage, Language, byte[], string, bool)
  fullName: Pie.ShaderCompiler.Compiler.ToSpirv(Pie.ShaderCompiler.Stage, Pie.ShaderCompiler.Language, byte[], string, bool)
  type: Method
  source:
    remote:
      path: Pie.ShaderCompiler/Compiler.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: ToSpirv
    path: src/Pie/Pie.ShaderCompiler/Compiler.cs
    startLine: 26
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  summary: "\nCompile GLSL/HLSL code to Spir-V.\n"
  example: []
  syntax:
    content: public static CompilerResult ToSpirv(Stage stage, Language language, byte[] source, string entryPoint, bool reflect = false)
    parameters:
    - id: stage
      type: Pie.ShaderCompiler.Stage
      description: The shader <xref href="Pie.ShaderCompiler.Stage" data-throw-if-not-resolved="false"></xref> to compile.
    - id: language
      type: Pie.ShaderCompiler.Language
      description: The source&apos;s shading language.
    - id: source
      type: System.Byte[]
      description: The source code, in ASCII representation.
    - id: entryPoint
      type: System.String
      description: The entry point of the shader. Usually &quot;main&quot; for GLSL.
    - id: reflect
      type: System.Boolean
      description: >-
        Whether or not to return <xref href="Pie.ShaderCompiler.ReflectionInfo" data-throw-if-not-resolved="false"></xref>. This causes a slight performance

        hit, so use wisely.
    return:
      type: Pie.ShaderCompiler.CompilerResult
      description: The <xref href="Pie.ShaderCompiler.CompilerResult" data-throw-if-not-resolved="false"></xref> of this compilation.
    content.vb: Public Shared Function ToSpirv(stage As Stage, language As Language, source As Byte(), entryPoint As String, reflect As Boolean = False) As CompilerResult
  overload: Pie.ShaderCompiler.Compiler.ToSpirv*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if an unsupported <code data-dev-comment-type="paramref" class="paramref">language</code> is used.
  nameWithType.vb: Compiler.ToSpirv(Stage, Language, Byte(), String, Boolean)
  fullName.vb: Pie.ShaderCompiler.Compiler.ToSpirv(Pie.ShaderCompiler.Stage, Pie.ShaderCompiler.Language, Byte(), String, Boolean)
  name.vb: ToSpirv(Stage, Language, Byte(), String, Boolean)
- uid: Pie.ShaderCompiler.Compiler.FromSpirv(Pie.ShaderCompiler.Language,System.Byte[])
  commentId: M:Pie.ShaderCompiler.Compiler.FromSpirv(Pie.ShaderCompiler.Language,System.Byte[])
  id: FromSpirv(Pie.ShaderCompiler.Language,System.Byte[])
  parent: Pie.ShaderCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FromSpirv(Language, byte[])
  nameWithType: Compiler.FromSpirv(Language, byte[])
  fullName: Pie.ShaderCompiler.Compiler.FromSpirv(Pie.ShaderCompiler.Language, byte[])
  type: Method
  source:
    remote:
      path: Pie.ShaderCompiler/Compiler.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: FromSpirv
    path: src/Pie/Pie.ShaderCompiler/Compiler.cs
    startLine: 162
  assemblies:
  - Pie.ShaderCompiler
  namespace: Pie.ShaderCompiler
  summary: "\nTranspile Spir-V to shader source code.\n"
  example: []
  syntax:
    content: public static CompilerResult FromSpirv(Language language, byte[] spirv)
    parameters:
    - id: language
      type: Pie.ShaderCompiler.Language
      description: The language to transpile to.
    - id: spirv
      type: System.Byte[]
      description: The Spir-V bytecode to transpile.
    return:
      type: Pie.ShaderCompiler.CompilerResult
      description: The <xref href="Pie.ShaderCompiler.CompilerResult" data-throw-if-not-resolved="false"></xref> of this compilation.
    content.vb: Public Shared Function FromSpirv(language As Language, spirv As Byte()) As CompilerResult
  overload: Pie.ShaderCompiler.Compiler.FromSpirv*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if an unsupported <code data-dev-comment-type="paramref" class="paramref">language</code> is used.
  nameWithType.vb: Compiler.FromSpirv(Language, Byte())
  fullName.vb: Pie.ShaderCompiler.Compiler.FromSpirv(Pie.ShaderCompiler.Language, Byte())
  name.vb: FromSpirv(Language, Byte())
references:
- uid: Pie.ShaderCompiler
  commentId: N:Pie.ShaderCompiler
  name: Pie.ShaderCompiler
  nameWithType: Pie.ShaderCompiler
  fullName: Pie.ShaderCompiler
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.ShaderCompiler
    name: ShaderCompiler
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.ShaderCompiler
    name: ShaderCompiler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.ShaderCompiler.Stage
  commentId: T:Pie.ShaderCompiler.Stage
  parent: Pie.ShaderCompiler
  name: Stage
  nameWithType: Stage
  fullName: Pie.ShaderCompiler.Stage
- uid: Pie.ShaderCompiler.ReflectionInfo
  commentId: T:Pie.ShaderCompiler.ReflectionInfo
  parent: Pie.ShaderCompiler
  name: ReflectionInfo
  nameWithType: ReflectionInfo
  fullName: Pie.ShaderCompiler.ReflectionInfo
- uid: Pie.ShaderCompiler.CompilerResult
  commentId: T:Pie.ShaderCompiler.CompilerResult
  parent: Pie.ShaderCompiler
  name: CompilerResult
  nameWithType: CompilerResult
  fullName: Pie.ShaderCompiler.CompilerResult
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Pie.ShaderCompiler.Compiler.ToSpirv*
  commentId: Overload:Pie.ShaderCompiler.Compiler.ToSpirv
  name: ToSpirv
  nameWithType: Compiler.ToSpirv
  fullName: Pie.ShaderCompiler.Compiler.ToSpirv
- uid: Pie.ShaderCompiler.Language
  commentId: T:Pie.ShaderCompiler.Language
  parent: Pie.ShaderCompiler
  name: Language
  nameWithType: Language
  fullName: Pie.ShaderCompiler.Language
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.ShaderCompiler.Compiler.FromSpirv*
  commentId: Overload:Pie.ShaderCompiler.Compiler.FromSpirv
  name: FromSpirv
  nameWithType: Compiler.FromSpirv
  fullName: Pie.ShaderCompiler.Compiler.FromSpirv
