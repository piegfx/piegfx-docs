### YamlMime:ManagedReference
items:
- uid: Pie.ShaderAttachment
  commentId: T:Pie.ShaderAttachment
  id: ShaderAttachment
  parent: Pie
  children:
  - Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.Byte[])
  - Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.String)
  - Pie.ShaderAttachment.Source
  - Pie.ShaderAttachment.Stage
  langs:
  - csharp
  - vb
  name: ShaderAttachment
  nameWithType: ShaderAttachment
  fullName: Pie.ShaderAttachment
  type: Struct
  source:
    remote:
      path: Pie/ShaderAttachment.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: ShaderAttachment
    path: src/Pie/Pie/ShaderAttachment.cs
    startLine: 7
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nAttach shader code at the given <xref href=\"Pie.ShaderStage\" data-throw-if-not-resolved=\"false\"></xref> to a new <xref href=\"Pie.Shader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct ShaderAttachment
    content.vb: Public Structure ShaderAttachment
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.ShaderAttachment.Stage
  commentId: F:Pie.ShaderAttachment.Stage
  id: Stage
  parent: Pie.ShaderAttachment
  langs:
  - csharp
  - vb
  name: Stage
  nameWithType: ShaderAttachment.Stage
  fullName: Pie.ShaderAttachment.Stage
  type: Field
  source:
    remote:
      path: Pie/ShaderAttachment.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Stage
    path: src/Pie/Pie/ShaderAttachment.cs
    startLine: 12
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe stage of this shader attachment.\n"
  example: []
  syntax:
    content: public ShaderStage Stage
    return:
      type: Pie.ShaderStage
    content.vb: Public Stage As ShaderStage
- uid: Pie.ShaderAttachment.Source
  commentId: F:Pie.ShaderAttachment.Source
  id: Source
  parent: Pie.ShaderAttachment
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ShaderAttachment.Source
  fullName: Pie.ShaderAttachment.Source
  type: Field
  source:
    remote:
      path: Pie/ShaderAttachment.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Source
    path: src/Pie/Pie/ShaderAttachment.cs
    startLine: 17
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nThe source code of this shader attachment.\n"
  example: []
  syntax:
    content: public byte[] Source
    return:
      type: System.Byte[]
    content.vb: Public Source As Byte()
- uid: Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.Byte[])
  commentId: M:Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.Byte[])
  id: '#ctor(Pie.ShaderStage,System.Byte[])'
  parent: Pie.ShaderAttachment
  langs:
  - csharp
  - vb
  name: ShaderAttachment(ShaderStage, byte[])
  nameWithType: ShaderAttachment.ShaderAttachment(ShaderStage, byte[])
  fullName: Pie.ShaderAttachment.ShaderAttachment(Pie.ShaderStage, byte[])
  type: Constructor
  source:
    remote:
      path: Pie/ShaderAttachment.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/ShaderAttachment.cs
    startLine: 26
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new shader attachment.\n"
  example: []
  syntax:
    content: public ShaderAttachment(ShaderStage stage, byte[] source)
    parameters:
    - id: stage
      type: Pie.ShaderStage
      description: The stage of this shader attachment.
    - id: source
      type: System.Byte[]
      description: The source code of this shader attachment.
    content.vb: Public Sub New(stage As ShaderStage, source As Byte())
  overload: Pie.ShaderAttachment.#ctor*
  nameWithType.vb: ShaderAttachment.New(ShaderStage, Byte())
  fullName.vb: Pie.ShaderAttachment.New(Pie.ShaderStage, Byte())
  name.vb: New(ShaderStage, Byte())
- uid: Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.String)
  commentId: M:Pie.ShaderAttachment.#ctor(Pie.ShaderStage,System.String)
  id: '#ctor(Pie.ShaderStage,System.String)'
  parent: Pie.ShaderAttachment
  langs:
  - csharp
  - vb
  name: ShaderAttachment(ShaderStage, string)
  nameWithType: ShaderAttachment.ShaderAttachment(ShaderStage, string)
  fullName: Pie.ShaderAttachment.ShaderAttachment(Pie.ShaderStage, string)
  type: Constructor
  source:
    remote:
      path: Pie/ShaderAttachment.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie/ShaderAttachment.cs
    startLine: 38
  assemblies:
  - Pie
  namespace: Pie
  summary: "\nCreate a new shader attachment.\n"
  example: []
  syntax:
    content: public ShaderAttachment(ShaderStage stage, string source)
    parameters:
    - id: stage
      type: Pie.ShaderStage
      description: The stage of this shader attachment.
    - id: source
      type: System.String
      description: The source code of this shader attachment.
    content.vb: Public Sub New(stage As ShaderStage, source As String)
  overload: Pie.ShaderAttachment.#ctor*
  nameWithType.vb: ShaderAttachment.New(ShaderStage, String)
  fullName.vb: Pie.ShaderAttachment.New(Pie.ShaderStage, String)
  name.vb: New(ShaderStage, String)
references:
- uid: Pie.ShaderStage
  commentId: T:Pie.ShaderStage
  parent: Pie
  name: ShaderStage
  nameWithType: ShaderStage
  fullName: Pie.ShaderStage
- uid: Pie.Shader
  commentId: T:Pie.Shader
  parent: Pie
  name: Shader
  nameWithType: Shader
  fullName: Pie.Shader
- uid: Pie
  commentId: N:Pie
  name: Pie
  nameWithType: Pie
  fullName: Pie
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
- uid: Pie.ShaderAttachment.#ctor*
  commentId: Overload:Pie.ShaderAttachment.#ctor
  name: ShaderAttachment
  nameWithType: ShaderAttachment.ShaderAttachment
  fullName: Pie.ShaderAttachment.ShaderAttachment
  nameWithType.vb: ShaderAttachment.New
  fullName.vb: Pie.ShaderAttachment.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
