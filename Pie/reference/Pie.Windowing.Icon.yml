### YamlMime:ManagedReference
items:
- uid: Pie.Windowing.Icon
  commentId: T:Pie.Windowing.Icon
  id: Icon
  parent: Pie.Windowing
  children:
  - Pie.Windowing.Icon.#ctor(System.UInt32,System.UInt32,System.Byte[])
  - Pie.Windowing.Icon.Data
  - Pie.Windowing.Icon.Height
  - Pie.Windowing.Icon.Width
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Icon
  fullName: Pie.Windowing.Icon
  type: Struct
  source:
    remote:
      path: Pie.Windowing/Icon.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Icon
    path: src/Pie/Pie.Windowing/Icon.cs
    startLine: 2
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public struct Icon
    content.vb: Public Structure Icon
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.Windowing.Icon.Width
  commentId: F:Pie.Windowing.Icon.Width
  id: Width
  parent: Pie.Windowing.Icon
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Icon.Width
  fullName: Pie.Windowing.Icon.Width
  type: Field
  source:
    remote:
      path: Pie.Windowing/Icon.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Width
    path: src/Pie/Pie.Windowing/Icon.cs
    startLine: 4
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public readonly uint Width
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Width As UInteger
- uid: Pie.Windowing.Icon.Height
  commentId: F:Pie.Windowing.Icon.Height
  id: Height
  parent: Pie.Windowing.Icon
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Icon.Height
  fullName: Pie.Windowing.Icon.Height
  type: Field
  source:
    remote:
      path: Pie.Windowing/Icon.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Height
    path: src/Pie/Pie.Windowing/Icon.cs
    startLine: 5
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public readonly uint Height
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Height As UInteger
- uid: Pie.Windowing.Icon.Data
  commentId: F:Pie.Windowing.Icon.Data
  id: Data
  parent: Pie.Windowing.Icon
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Icon.Data
  fullName: Pie.Windowing.Icon.Data
  type: Field
  source:
    remote:
      path: Pie.Windowing/Icon.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Data
    path: src/Pie/Pie.Windowing/Icon.cs
    startLine: 6
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public readonly byte[] Data
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Data As Byte()
- uid: Pie.Windowing.Icon.#ctor(System.UInt32,System.UInt32,System.Byte[])
  commentId: M:Pie.Windowing.Icon.#ctor(System.UInt32,System.UInt32,System.Byte[])
  id: '#ctor(System.UInt32,System.UInt32,System.Byte[])'
  parent: Pie.Windowing.Icon
  langs:
  - csharp
  - vb
  name: Icon(uint, uint, byte[])
  nameWithType: Icon.Icon(uint, uint, byte[])
  fullName: Pie.Windowing.Icon.Icon(uint, uint, byte[])
  type: Constructor
  source:
    remote:
      path: Pie.Windowing/Icon.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.Windowing/Icon.cs
    startLine: 8
  assemblies:
  - Pie.Windowing
  namespace: Pie.Windowing
  syntax:
    content: public Icon(uint width, uint height, byte[] data)
    parameters:
    - id: width
      type: System.UInt32
    - id: height
      type: System.UInt32
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(width As UInteger, height As UInteger, data As Byte())
  overload: Pie.Windowing.Icon.#ctor*
  nameWithType.vb: Icon.New(UInteger, UInteger, Byte())
  fullName.vb: Pie.Windowing.Icon.New(UInteger, UInteger, Byte())
  name.vb: New(UInteger, UInteger, Byte())
references:
- uid: Pie.Windowing
  commentId: N:Pie.Windowing
  name: Pie.Windowing
  nameWithType: Pie.Windowing
  fullName: Pie.Windowing
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Windowing
    name: Windowing
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Windowing
    name: Windowing
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
- uid: Pie.Windowing.Icon.#ctor*
  commentId: Overload:Pie.Windowing.Icon.#ctor
  name: Icon
  nameWithType: Icon.Icon
  fullName: Pie.Windowing.Icon.Icon
  nameWithType.vb: Icon.New
  fullName.vb: Pie.Windowing.Icon.New
  name.vb: New
