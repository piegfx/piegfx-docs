### YamlMime:ManagedReference
items:
- uid: Pie.Audio.AudioDevice
  commentId: T:Pie.Audio.AudioDevice
  id: AudioDevice
  parent: Pie.Audio
  children:
  - Pie.Audio.AudioDevice.#ctor(System.UInt32,System.UInt32)
  - Pie.Audio.AudioDevice.BufferFinished
  - Pie.Audio.AudioDevice.Channels
  - Pie.Audio.AudioDevice.CreateBuffer
  - Pie.Audio.AudioDevice.Dispose
  - Pie.Audio.AudioDevice.FindChannel
  - Pie.Audio.AudioDevice.FindFreeChannelIfAvailable
  - Pie.Audio.AudioDevice.GetFormat(System.Int32,System.Int32)
  - Pie.Audio.AudioDevice.IsPlaying(System.Int32)
  - Pie.Audio.AudioDevice.MaxAllowableChannels
  - Pie.Audio.AudioDevice.Play(System.Int32,Pie.Audio.AudioBuffer,System.Single,System.Single,System.Boolean,Pie.Audio.Priority)
  - Pie.Audio.AudioDevice.Queue(System.Int32,Pie.Audio.AudioBuffer,System.Boolean)
  - Pie.Audio.AudioDevice.Stop(System.Int32)
  - Pie.Audio.AudioDevice.UnqueueAllBuffers(System.Int32)
  - Pie.Audio.AudioDevice.Update
  - Pie.Audio.AudioDevice.UpdateBuffer``1(Pie.Audio.AudioBuffer,Pie.Audio.AudioFormat,``0[],System.UInt32)
  langs:
  - csharp
  - vb
  name: AudioDevice
  nameWithType: AudioDevice
  fullName: Pie.Audio.AudioDevice
  type: Class
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: AudioDevice
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 8
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: 'public class AudioDevice : IDisposable'
    content.vb: Public Class AudioDevice Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Pie.Audio.AudioDevice.BufferFinished
  commentId: E:Pie.Audio.AudioDevice.BufferFinished
  id: BufferFinished
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: BufferFinished
  nameWithType: AudioDevice.BufferFinished
  fullName: Pie.Audio.AudioDevice.BufferFinished
  type: Event
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: BufferFinished
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 10
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public event AudioDevice.OnBufferFinished BufferFinished
    return:
      type: Pie.Audio.AudioDevice.OnBufferFinished
    content.vb: Public Event BufferFinished As AudioDevice.OnBufferFinished
- uid: Pie.Audio.AudioDevice.MaxAllowableChannels
  commentId: F:Pie.Audio.AudioDevice.MaxAllowableChannels
  id: MaxAllowableChannels
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: MaxAllowableChannels
  nameWithType: AudioDevice.MaxAllowableChannels
  fullName: Pie.Audio.AudioDevice.MaxAllowableChannels
  type: Field
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: MaxAllowableChannels
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 12
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public const int MaxAllowableChannels = 256
    return:
      type: System.Int32
    content.vb: Public Const MaxAllowableChannels As Integer = 256
- uid: Pie.Audio.AudioDevice.Channels
  commentId: F:Pie.Audio.AudioDevice.Channels
  id: Channels
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: AudioDevice.Channels
  fullName: Pie.Audio.AudioDevice.Channels
  type: Field
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Channels
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 25
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public readonly uint Channels
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Channels As UInteger
- uid: Pie.Audio.AudioDevice.#ctor(System.UInt32,System.UInt32)
  commentId: M:Pie.Audio.AudioDevice.#ctor(System.UInt32,System.UInt32)
  id: '#ctor(System.UInt32,System.UInt32)'
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: AudioDevice(uint, uint)
  nameWithType: AudioDevice.AudioDevice(uint, uint)
  fullName: Pie.Audio.AudioDevice.AudioDevice(uint, uint)
  type: Constructor
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: .ctor
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 32
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nCreate a new audio device with the number of channels provided.\n"
  example: []
  syntax:
    content: public AudioDevice(uint maxChannels = 256, uint updateFrequencyInMs = 100)
    parameters:
    - id: maxChannels
      type: System.UInt32
      description: The maximum number of sounds that can be played at once.
    - id: updateFrequencyInMs
      type: System.UInt32
      description: The auto-update frequency in milliseconds. Set to 0 to disable automatic update and allow manual updating instead.
    content.vb: Public Sub New(maxChannels As UInteger = 256, updateFrequencyInMs As UInteger = 100)
  overload: Pie.Audio.AudioDevice.#ctor*
  nameWithType.vb: AudioDevice.New(UInteger, UInteger)
  fullName.vb: Pie.Audio.AudioDevice.New(UInteger, UInteger)
  name.vb: New(UInteger, UInteger)
- uid: Pie.Audio.AudioDevice.CreateBuffer
  commentId: M:Pie.Audio.AudioDevice.CreateBuffer
  id: CreateBuffer
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: CreateBuffer()
  nameWithType: AudioDevice.CreateBuffer()
  fullName: Pie.Audio.AudioDevice.CreateBuffer()
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: CreateBuffer
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 68
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public AudioBuffer CreateBuffer()
    return:
      type: Pie.Audio.AudioBuffer
    content.vb: Public Function CreateBuffer() As AudioBuffer
  overload: Pie.Audio.AudioDevice.CreateBuffer*
- uid: Pie.Audio.AudioDevice.UpdateBuffer``1(Pie.Audio.AudioBuffer,Pie.Audio.AudioFormat,``0[],System.UInt32)
  commentId: M:Pie.Audio.AudioDevice.UpdateBuffer``1(Pie.Audio.AudioBuffer,Pie.Audio.AudioFormat,``0[],System.UInt32)
  id: UpdateBuffer``1(Pie.Audio.AudioBuffer,Pie.Audio.AudioFormat,``0[],System.UInt32)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: UpdateBuffer<T>(AudioBuffer, AudioFormat, T[], uint)
  nameWithType: AudioDevice.UpdateBuffer<T>(AudioBuffer, AudioFormat, T[], uint)
  fullName: Pie.Audio.AudioDevice.UpdateBuffer<T>(Pie.Audio.AudioBuffer, Pie.Audio.AudioFormat, T[], uint)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: UpdateBuffer
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 70
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: 'public void UpdateBuffer<T>(AudioBuffer buffer, AudioFormat format, T[] data, uint sampleRate) where T : unmanaged'
    parameters:
    - id: buffer
      type: Pie.Audio.AudioBuffer
    - id: format
      type: Pie.Audio.AudioFormat
    - id: data
      type: '{T}[]'
    - id: sampleRate
      type: System.UInt32
    typeParameters:
    - id: T
    content.vb: Public Sub UpdateBuffer(Of T As Structure)(buffer As AudioBuffer, format As AudioFormat, data As T(), sampleRate As UInteger)
  overload: Pie.Audio.AudioDevice.UpdateBuffer*
  nameWithType.vb: AudioDevice.UpdateBuffer(Of T)(AudioBuffer, AudioFormat, T(), UInteger)
  fullName.vb: Pie.Audio.AudioDevice.UpdateBuffer(Of T)(Pie.Audio.AudioBuffer, Pie.Audio.AudioFormat, T(), UInteger)
  name.vb: UpdateBuffer(Of T)(AudioBuffer, AudioFormat, T(), UInteger)
- uid: Pie.Audio.AudioDevice.Play(System.Int32,Pie.Audio.AudioBuffer,System.Single,System.Single,System.Boolean,Pie.Audio.Priority)
  commentId: M:Pie.Audio.AudioDevice.Play(System.Int32,Pie.Audio.AudioBuffer,System.Single,System.Single,System.Boolean,Pie.Audio.Priority)
  id: Play(System.Int32,Pie.Audio.AudioBuffer,System.Single,System.Single,System.Boolean,Pie.Audio.Priority)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Play(int, AudioBuffer, float, float, bool, Priority)
  nameWithType: AudioDevice.Play(int, AudioBuffer, float, float, bool, Priority)
  fullName: Pie.Audio.AudioDevice.Play(int, Pie.Audio.AudioBuffer, float, float, bool, Pie.Audio.Priority)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Play
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 84
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void Play(int channel, AudioBuffer buffer, float volume = 1, float pitch = 1, bool loop = false, Priority priority = Priority.Low)
    parameters:
    - id: channel
      type: System.Int32
    - id: buffer
      type: Pie.Audio.AudioBuffer
    - id: volume
      type: System.Single
    - id: pitch
      type: System.Single
    - id: loop
      type: System.Boolean
    - id: priority
      type: Pie.Audio.Priority
    content.vb: Public Sub Play(channel As Integer, buffer As AudioBuffer, volume As Single = 1, pitch As Single = 1, [loop] As Boolean = False, priority As Priority = Priority.Low)
  overload: Pie.Audio.AudioDevice.Play*
  nameWithType.vb: AudioDevice.Play(Integer, AudioBuffer, Single, Single, Boolean, Priority)
  fullName.vb: Pie.Audio.AudioDevice.Play(Integer, Pie.Audio.AudioBuffer, Single, Single, Boolean, Pie.Audio.Priority)
  name.vb: Play(Integer, AudioBuffer, Single, Single, Boolean, Priority)
- uid: Pie.Audio.AudioDevice.Queue(System.Int32,Pie.Audio.AudioBuffer,System.Boolean)
  commentId: M:Pie.Audio.AudioDevice.Queue(System.Int32,Pie.Audio.AudioBuffer,System.Boolean)
  id: Queue(System.Int32,Pie.Audio.AudioBuffer,System.Boolean)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Queue(int, AudioBuffer, bool)
  nameWithType: AudioDevice.Queue(int, AudioBuffer, bool)
  fullName: Pie.Audio.AudioDevice.Queue(int, Pie.Audio.AudioBuffer, bool)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Queue
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 103
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void Queue(int channel, AudioBuffer buffer, bool loop = false)
    parameters:
    - id: channel
      type: System.Int32
    - id: buffer
      type: Pie.Audio.AudioBuffer
    - id: loop
      type: System.Boolean
    content.vb: Public Sub Queue(channel As Integer, buffer As AudioBuffer, [loop] As Boolean = False)
  overload: Pie.Audio.AudioDevice.Queue*
  nameWithType.vb: AudioDevice.Queue(Integer, AudioBuffer, Boolean)
  fullName.vb: Pie.Audio.AudioDevice.Queue(Integer, Pie.Audio.AudioBuffer, Boolean)
  name.vb: Queue(Integer, AudioBuffer, Boolean)
- uid: Pie.Audio.AudioDevice.Stop(System.Int32)
  commentId: M:Pie.Audio.AudioDevice.Stop(System.Int32)
  id: Stop(System.Int32)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Stop(int)
  nameWithType: AudioDevice.Stop(int)
  fullName: Pie.Audio.AudioDevice.Stop(int)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Stop
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 114
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void Stop(int channel)
    parameters:
    - id: channel
      type: System.Int32
    content.vb: Public Sub [Stop](channel As Integer)
  overload: Pie.Audio.AudioDevice.Stop*
  nameWithType.vb: AudioDevice.Stop(Integer)
  fullName.vb: Pie.Audio.AudioDevice.Stop(Integer)
  name.vb: Stop(Integer)
- uid: Pie.Audio.AudioDevice.FindFreeChannelIfAvailable
  commentId: M:Pie.Audio.AudioDevice.FindFreeChannelIfAvailable
  id: FindFreeChannelIfAvailable
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: FindFreeChannelIfAvailable()
  nameWithType: AudioDevice.FindFreeChannelIfAvailable()
  fullName: Pie.Audio.AudioDevice.FindFreeChannelIfAvailable()
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: FindFreeChannelIfAvailable
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 127
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nFinds the next free channel. If none are available, returns -1.\n"
  example: []
  syntax:
    content: public int FindFreeChannelIfAvailable()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FindFreeChannelIfAvailable() As Integer
  overload: Pie.Audio.AudioDevice.FindFreeChannelIfAvailable*
- uid: Pie.Audio.AudioDevice.FindChannel
  commentId: M:Pie.Audio.AudioDevice.FindChannel
  id: FindChannel
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: FindChannel()
  nameWithType: AudioDevice.FindChannel()
  fullName: Pie.Audio.AudioDevice.FindChannel()
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: FindChannel
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 143
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nFinds the next available channel. If none are available, the currently playing channels are sorted by priority.\nIf all channels have <xref href=\"Pie.Audio.Priority.Song\" data-throw-if-not-resolved=\"false\"></xref> priority, a value of -1 is returned.\n"
  example: []
  syntax:
    content: public int FindChannel()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FindChannel() As Integer
  overload: Pie.Audio.AudioDevice.FindChannel*
- uid: Pie.Audio.AudioDevice.IsPlaying(System.Int32)
  commentId: M:Pie.Audio.AudioDevice.IsPlaying(System.Int32)
  id: IsPlaying(System.Int32)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: IsPlaying(int)
  nameWithType: AudioDevice.IsPlaying(int)
  fullName: Pie.Audio.AudioDevice.IsPlaying(int)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: IsPlaying
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 159
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public bool IsPlaying(int channel)
    parameters:
    - id: channel
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsPlaying(channel As Integer) As Boolean
  overload: Pie.Audio.AudioDevice.IsPlaying*
  nameWithType.vb: AudioDevice.IsPlaying(Integer)
  fullName.vb: Pie.Audio.AudioDevice.IsPlaying(Integer)
  name.vb: IsPlaying(Integer)
- uid: Pie.Audio.AudioDevice.UnqueueAllBuffers(System.Int32)
  commentId: M:Pie.Audio.AudioDevice.UnqueueAllBuffers(System.Int32)
  id: UnqueueAllBuffers(System.Int32)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: UnqueueAllBuffers(int)
  nameWithType: AudioDevice.UnqueueAllBuffers(int)
  fullName: Pie.Audio.AudioDevice.UnqueueAllBuffers(int)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: UnqueueAllBuffers
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 168
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void UnqueueAllBuffers(int channel)
    parameters:
    - id: channel
      type: System.Int32
    content.vb: Public Sub UnqueueAllBuffers(channel As Integer)
  overload: Pie.Audio.AudioDevice.UnqueueAllBuffers*
  nameWithType.vb: AudioDevice.UnqueueAllBuffers(Integer)
  fullName.vb: Pie.Audio.AudioDevice.UnqueueAllBuffers(Integer)
  name.vb: UnqueueAllBuffers(Integer)
- uid: Pie.Audio.AudioDevice.Update
  commentId: M:Pie.Audio.AudioDevice.Update
  id: Update
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: AudioDevice.Update()
  fullName: Pie.Audio.AudioDevice.Update()
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Update
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 177
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Pie.Audio.AudioDevice.Update*
- uid: Pie.Audio.AudioDevice.GetFormat(System.Int32,System.Int32)
  commentId: M:Pie.Audio.AudioDevice.GetFormat(System.Int32,System.Int32)
  id: GetFormat(System.Int32,System.Int32)
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: GetFormat(int, int)
  nameWithType: AudioDevice.GetFormat(int, int)
  fullName: Pie.Audio.AudioDevice.GetFormat(int, int)
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: GetFormat
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 197
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public static AudioFormat GetFormat(int channels, int bitsPerSample)
    parameters:
    - id: channels
      type: System.Int32
    - id: bitsPerSample
      type: System.Int32
    return:
      type: Pie.Audio.AudioFormat
    content.vb: Public Shared Function GetFormat(channels As Integer, bitsPerSample As Integer) As AudioFormat
  overload: Pie.Audio.AudioDevice.GetFormat*
  nameWithType.vb: AudioDevice.GetFormat(Integer, Integer)
  fullName.vb: Pie.Audio.AudioDevice.GetFormat(Integer, Integer)
  name.vb: GetFormat(Integer, Integer)
- uid: Pie.Audio.AudioDevice.Dispose
  commentId: M:Pie.Audio.AudioDevice.Dispose
  id: Dispose
  parent: Pie.Audio.AudioDevice
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AudioDevice.Dispose()
  fullName: Pie.Audio.AudioDevice.Dispose()
  type: Method
  source:
    remote:
      path: Pie.Audio/AudioDevice.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Dispose
    path: src/Pie/Pie.Audio/AudioDevice.cs
    startLine: 226
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Pie.Audio.AudioDevice.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: Pie.Audio
  commentId: N:Pie.Audio
  name: Pie.Audio
  nameWithType: Pie.Audio
  fullName: Pie.Audio
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pie.Audio.AudioDevice.OnBufferFinished
  commentId: T:Pie.Audio.AudioDevice.OnBufferFinished
  parent: Pie.Audio
  name: AudioDevice.OnBufferFinished
  nameWithType: AudioDevice.OnBufferFinished
  fullName: Pie.Audio.AudioDevice.OnBufferFinished
  spec.csharp:
  - uid: Pie.Audio.AudioDevice
    name: AudioDevice
  - name: .
  - uid: Pie.Audio.AudioDevice.OnBufferFinished
    name: OnBufferFinished
  spec.vb:
  - uid: Pie.Audio.AudioDevice
    name: AudioDevice
  - name: .
  - uid: Pie.Audio.AudioDevice.OnBufferFinished
    name: OnBufferFinished
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Pie.Audio.AudioDevice.#ctor*
  commentId: Overload:Pie.Audio.AudioDevice.#ctor
  name: AudioDevice
  nameWithType: AudioDevice.AudioDevice
  fullName: Pie.Audio.AudioDevice.AudioDevice
  nameWithType.vb: AudioDevice.New
  fullName.vb: Pie.Audio.AudioDevice.New
  name.vb: New
- uid: Pie.Audio.AudioDevice.CreateBuffer*
  commentId: Overload:Pie.Audio.AudioDevice.CreateBuffer
  name: CreateBuffer
  nameWithType: AudioDevice.CreateBuffer
  fullName: Pie.Audio.AudioDevice.CreateBuffer
- uid: Pie.Audio.AudioBuffer
  commentId: T:Pie.Audio.AudioBuffer
  parent: Pie.Audio
  name: AudioBuffer
  nameWithType: AudioBuffer
  fullName: Pie.Audio.AudioBuffer
- uid: Pie.Audio.AudioDevice.UpdateBuffer*
  commentId: Overload:Pie.Audio.AudioDevice.UpdateBuffer
  name: UpdateBuffer
  nameWithType: AudioDevice.UpdateBuffer
  fullName: Pie.Audio.AudioDevice.UpdateBuffer
- uid: Pie.Audio.AudioFormat
  commentId: T:Pie.Audio.AudioFormat
  parent: Pie.Audio
  name: AudioFormat
  nameWithType: AudioFormat
  fullName: Pie.Audio.AudioFormat
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Pie.Audio.AudioDevice.Play*
  commentId: Overload:Pie.Audio.AudioDevice.Play
  name: Play
  nameWithType: AudioDevice.Play
  fullName: Pie.Audio.AudioDevice.Play
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Pie.Audio.Priority
  commentId: T:Pie.Audio.Priority
  parent: Pie.Audio
  name: Priority
  nameWithType: Priority
  fullName: Pie.Audio.Priority
- uid: Pie.Audio.AudioDevice.Queue*
  commentId: Overload:Pie.Audio.AudioDevice.Queue
  name: Queue
  nameWithType: AudioDevice.Queue
  fullName: Pie.Audio.AudioDevice.Queue
- uid: Pie.Audio.AudioDevice.Stop*
  commentId: Overload:Pie.Audio.AudioDevice.Stop
  name: Stop
  nameWithType: AudioDevice.Stop
  fullName: Pie.Audio.AudioDevice.Stop
- uid: Pie.Audio.AudioDevice.FindFreeChannelIfAvailable*
  commentId: Overload:Pie.Audio.AudioDevice.FindFreeChannelIfAvailable
  name: FindFreeChannelIfAvailable
  nameWithType: AudioDevice.FindFreeChannelIfAvailable
  fullName: Pie.Audio.AudioDevice.FindFreeChannelIfAvailable
- uid: Pie.Audio.Priority.Song
  commentId: F:Pie.Audio.Priority.Song
  isExternal: true
- uid: Pie.Audio.AudioDevice.FindChannel*
  commentId: Overload:Pie.Audio.AudioDevice.FindChannel
  name: FindChannel
  nameWithType: AudioDevice.FindChannel
  fullName: Pie.Audio.AudioDevice.FindChannel
- uid: Pie.Audio.AudioDevice.IsPlaying*
  commentId: Overload:Pie.Audio.AudioDevice.IsPlaying
  name: IsPlaying
  nameWithType: AudioDevice.IsPlaying
  fullName: Pie.Audio.AudioDevice.IsPlaying
- uid: Pie.Audio.AudioDevice.UnqueueAllBuffers*
  commentId: Overload:Pie.Audio.AudioDevice.UnqueueAllBuffers
  name: UnqueueAllBuffers
  nameWithType: AudioDevice.UnqueueAllBuffers
  fullName: Pie.Audio.AudioDevice.UnqueueAllBuffers
- uid: Pie.Audio.AudioDevice.Update*
  commentId: Overload:Pie.Audio.AudioDevice.Update
  name: Update
  nameWithType: AudioDevice.Update
  fullName: Pie.Audio.AudioDevice.Update
- uid: Pie.Audio.AudioDevice.GetFormat*
  commentId: Overload:Pie.Audio.AudioDevice.GetFormat
  name: GetFormat
  nameWithType: AudioDevice.GetFormat
  fullName: Pie.Audio.AudioDevice.GetFormat
- uid: Pie.Audio.AudioDevice.Dispose*
  commentId: Overload:Pie.Audio.AudioDevice.Dispose
  name: Dispose
  nameWithType: AudioDevice.Dispose
  fullName: Pie.Audio.AudioDevice.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
