### YamlMime:ManagedReference
items:
- uid: Pie.Audio.Priority
  commentId: T:Pie.Audio.Priority
  id: Priority
  parent: Pie.Audio
  children:
  - Pie.Audio.Priority.High
  - Pie.Audio.Priority.Low
  - Pie.Audio.Priority.Medium
  - Pie.Audio.Priority.Song
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: Priority
  fullName: Pie.Audio.Priority
  type: Enum
  source:
    remote:
      path: Pie.Audio/Priority.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Priority
    path: src/Pie/Pie.Audio/Priority.cs
    startLine: 2
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  syntax:
    content: public enum Priority
    content.vb: Public Enum Priority
- uid: Pie.Audio.Priority.Low
  commentId: F:Pie.Audio.Priority.Low
  id: Low
  parent: Pie.Audio.Priority
  langs:
  - csharp
  - vb
  name: Low
  nameWithType: Priority.Low
  fullName: Pie.Audio.Priority.Low
  type: Field
  source:
    remote:
      path: Pie.Audio/Priority.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Low
    path: src/Pie/Pie.Audio/Priority.cs
    startLine: 7
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nLow priority channels will often get overwritten by new sounds if there are none left.\n"
  example: []
  syntax:
    content: Low = 0
    return:
      type: Pie.Audio.Priority
- uid: Pie.Audio.Priority.Medium
  commentId: F:Pie.Audio.Priority.Medium
  id: Medium
  parent: Pie.Audio.Priority
  langs:
  - csharp
  - vb
  name: Medium
  nameWithType: Priority.Medium
  fullName: Pie.Audio.Priority.Medium
  type: Field
  source:
    remote:
      path: Pie.Audio/Priority.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Medium
    path: src/Pie/Pie.Audio/Priority.cs
    startLine: 12
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nMedium priority channels will only get overwritten by new sounds if there are no low priority channels left.\n"
  example: []
  syntax:
    content: Medium = 1
    return:
      type: Pie.Audio.Priority
- uid: Pie.Audio.Priority.High
  commentId: F:Pie.Audio.Priority.High
  id: High
  parent: Pie.Audio.Priority
  langs:
  - csharp
  - vb
  name: High
  nameWithType: Priority.High
  fullName: Pie.Audio.Priority.High
  type: Field
  source:
    remote:
      path: Pie.Audio/Priority.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: High
    path: src/Pie/Pie.Audio/Priority.cs
    startLine: 17
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nHigh priority channels will very rarely get overwritten by new sounds.\n"
  example: []
  syntax:
    content: High = 2
    return:
      type: Pie.Audio.Priority
- uid: Pie.Audio.Priority.Song
  commentId: F:Pie.Audio.Priority.Song
  id: Song
  parent: Pie.Audio.Priority
  langs:
  - csharp
  - vb
  name: Song
  nameWithType: Priority.Song
  fullName: Pie.Audio.Priority.Song
  type: Field
  source:
    remote:
      path: Pie.Audio/Priority.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Song
    path: src/Pie/Pie.Audio/Priority.cs
    startLine: 22
  assemblies:
  - Pie.Audio
  namespace: Pie.Audio
  summary: "\nA channel with the song priority cannot get overwritten by new sounds.\n"
  example: []
  syntax:
    content: Song = 3
    return:
      type: Pie.Audio.Priority
references:
- uid: Pie.Audio
  commentId: N:Pie.Audio
  name: Pie.Audio
  nameWithType: Pie.Audio
  fullName: Pie.Audio
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Audio
    name: Audio
- uid: Pie.Audio.Priority
  commentId: T:Pie.Audio.Priority
  parent: Pie.Audio
  name: Priority
  nameWithType: Priority
  fullName: Pie.Audio.Priority
