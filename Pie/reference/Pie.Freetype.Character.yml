### YamlMime:ManagedReference
items:
- uid: Pie.Freetype.Character
  commentId: T:Pie.Freetype.Character
  id: Character
  parent: Pie.Freetype
  children:
  - Pie.Freetype.Character.Advance
  - Pie.Freetype.Character.Bitmap
  - Pie.Freetype.Character.BitmapLeft
  - Pie.Freetype.Character.BitmapTop
  - Pie.Freetype.Character.Height
  - Pie.Freetype.Character.Width
  langs:
  - csharp
  - vb
  name: Character
  nameWithType: Character
  fullName: Pie.Freetype.Character
  type: Struct
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Character
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 2
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public struct Character
    content.vb: Public Structure Character
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Pie.Freetype.Character.Width
  commentId: F:Pie.Freetype.Character.Width
  id: Width
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Character.Width
  fullName: Pie.Freetype.Character.Width
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Width
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 4
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: Pie.Freetype.Character.Height
  commentId: F:Pie.Freetype.Character.Height
  id: Height
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Character.Height
  fullName: Pie.Freetype.Character.Height
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Height
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 5
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: Pie.Freetype.Character.Advance
  commentId: F:Pie.Freetype.Character.Advance
  id: Advance
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: Advance
  nameWithType: Character.Advance
  fullName: Pie.Freetype.Character.Advance
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Advance
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 6
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public int Advance
    return:
      type: System.Int32
    content.vb: Public Advance As Integer
- uid: Pie.Freetype.Character.Bitmap
  commentId: F:Pie.Freetype.Character.Bitmap
  id: Bitmap
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: Bitmap
  nameWithType: Character.Bitmap
  fullName: Pie.Freetype.Character.Bitmap
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: Bitmap
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 7
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public byte[] Bitmap
    return:
      type: System.Byte[]
    content.vb: Public Bitmap As Byte()
- uid: Pie.Freetype.Character.BitmapLeft
  commentId: F:Pie.Freetype.Character.BitmapLeft
  id: BitmapLeft
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: BitmapLeft
  nameWithType: Character.BitmapLeft
  fullName: Pie.Freetype.Character.BitmapLeft
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: BitmapLeft
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 8
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public int BitmapLeft
    return:
      type: System.Int32
    content.vb: Public BitmapLeft As Integer
- uid: Pie.Freetype.Character.BitmapTop
  commentId: F:Pie.Freetype.Character.BitmapTop
  id: BitmapTop
  parent: Pie.Freetype.Character
  langs:
  - csharp
  - vb
  name: BitmapTop
  nameWithType: Character.BitmapTop
  fullName: Pie.Freetype.Character.BitmapTop
  type: Field
  source:
    remote:
      path: Pie.Freetype/Character.cs
      branch: master
      repo: https://github.com/piegfx/Pie
    id: BitmapTop
    path: src/Pie/Pie.Freetype/Character.cs
    startLine: 9
  assemblies:
  - Pie.Freetype
  namespace: Pie.Freetype
  syntax:
    content: public int BitmapTop
    return:
      type: System.Int32
    content.vb: Public BitmapTop As Integer
references:
- uid: Pie.Freetype
  commentId: N:Pie.Freetype
  name: Pie.Freetype
  nameWithType: Pie.Freetype
  fullName: Pie.Freetype
  spec.csharp:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Freetype
    name: Freetype
  spec.vb:
  - uid: Pie
    name: Pie
  - name: .
  - uid: Pie.Freetype
    name: Freetype
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
